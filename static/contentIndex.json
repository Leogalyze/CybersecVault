{"ferramentas/Ping---O-que-√©":{"slug":"ferramentas/Ping---O-que-√©","filePath":"ferramentas/Ping - O que √©.md","title":"Ping - O que √©?","links":["redes/Protocolos-de-Rede/ICMP-(Internet-Control-Message-Protocol)---O-que-√©"],"tags":["Ferramentas"],"content":"\nConceito Geral\nO ping √© uma ferramenta de diagn√≥stico que usa o ICMP para verificar/testar se um host na rede (computador, servidor, roteador, etc.) est√° ativo e acess√≠vel, e mede o tempo que leva para enviar e receber uma resposta.\nEle faz isso mandando pacotes ICMP Echo Request para o destino e esperando por uma resposta ICMP Echo Reply.\n\nComo o Ping funciona\n\nVoc√™ digita no terminal:\n\n\nping google.com\n\n\n\nO sistema:\n\nResolve o nome do host para um endere√ßo IP (DNS).\nEnvia pacotes ICMP Echo Request para aquele IP.\nEspera respostas ICMP Echo Reply.\n\n\n\nO resultado mostra:\n\nTempo de resposta (lat√™ncia, em ms) ‚Üí quanto demorou o pacote para ir e voltar.\nN√∫mero de pacotes enviados/recebidos/perdidos ‚Üí √∫til para medir perda de pacotes.\nTTL (Time to Live) ‚Üí quantos saltos o pacote ainda pode fazer antes de expirar (d√° pistas de quantos roteadores est√£o no caminho).\n\n\n\n\nQuando usar o Ping\n\n\nDiagn√≥stico b√°sico de rede\nVer se uma m√°quina est√° online ou acess√≠vel.\n\n\nTestar conectividade\nAntes de culpar o DNS, firewall ou aplica√ß√£o, testa o ping.\n\n\nMedi√ß√£o de lat√™ncia\nVer o tempo m√©dio de resposta entre voc√™ e o destino.\n\n\nVerificar perda de pacotes\nSe v√°rios pacotes n√£o chegam, a rede pode estar inst√°vel.\n\n\n\nO que pode impedir o ping de funcionar?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProblemaExplica√ß√£oHost est√° offSem resposta algumaICMP bloqueado no hostFirewalls (ex: Windows Defender, iptables)ICMP bloqueado na redeAlguns roteadores ou provedores dropam pacotes ICMPLat√™ncia alta / perda de pacoteVoc√™ v√™ ‚ÄúRequest timeout‚Äù ou valores altos de time\n\nResumindo\n\nPing √© a ferramenta mais simples de diagn√≥stico de rede.\nEle usa ICMP Echo Request/Reply.\n√ötil para ver se um host responde, medir lat√™ncia e perda de pacotes.\nMas n√£o garante que o servi√ßo (ex.: site, e-mail, banco de dados) esteja funcionando.\n\n\n\nAn√°lise ofensiva/defensiva\n1. Uso leg√≠timo\n\nFerramenta que envia pacotes ICMP Echo Request/Reply.\nUsada para testar conectividade, lat√™ncia e perda de pacotes.\n\n\n2. An√°lise ofensiva\n\nPing flood (DoS via excesso de requisi√ß√µes).\nSmurf attack (ping para broadcast com IP spoofing ‚Üí amplifica√ß√£o).\nReconhecimento: atacante pode mapear hosts ativos s√≥ com ping.\n\n\n3. An√°lise defensiva\n\nMitiga√ß√£o: limitar ICMP no firewall (permitir s√≥ tipos espec√≠ficos, como Destination Unreachable).\nMonitoramento: alertar no SIEM para picos anormais de ICMP.\nHardening: desativar resposta a ICMP em servidores sens√≠veis (ou s√≥ a broadcasts).\n\n\n4. Lab pr√°tico\n\nUsar Wireshark para capturar ping.\nBloquear ICMP no firewall e comparar resultados.\nSimular flood (com hping3 ou nping) e ver comportamento.\n\n\n5. Insight de carreira\n\nEm entrevistas de SOC ou Pentest, pode cair a pergunta:\n‚ÄúPing n√£o responde, o host est√° offline?‚Äù\nResposta correta: n√£o necessariamente, pode ser firewall bloqueando ICMP.\n\n\nNotas relacionadas:\nICMP (Internet Control Message Protocol) - O que √©\n"},"index":{"slug":"index","filePath":"index.md","title":"In√≠cio","links":["map-of-Content-(MOC)/Redes---MOC"],"tags":[],"content":"üëãüèæ‚Äã Sejam bem vindos camaradas\nEu sou Leonardo Oliveira e este site √© meu portf√≥lio de projetos e estudos em Ciberseguran√ßa.\n\nüíº‚Äã Portf√≥lio e Jornada em Ciberseguran√ßa\nO CyberSecVault foi criado com o objetivo de documentar minha jornada em ciberseguran√ßa e consolidar meu aprendizado em um reposit√≥rio organizado.\nAqui re√∫no minhas anota√ß√µes, estudos e laborat√≥rios pr√°ticos, servindo tanto como fonte de consulta pessoal quanto como portf√≥lio p√∫blico.\nA proposta √© transformar cada etapa da minha evolu√ß√£o em material de refer√™ncia e, ao mesmo tempo, compartilhar conhecimento com a comunidade de seguran√ßa da informa√ß√£o e contribuir com a conscientiza√ß√£o sobre seguran√ßa digital.\n‚ú® O CyberSecVault √© tanto meu portf√≥lio quanto uma vitrine do progresso cont√≠nuo que busco nessa jornada.\n\n‚Äãüôãüèæ‚Äç‚ôÇÔ∏è‚Äã Sobre mim\nSou um profissional em transi√ß√£o de carreira para √°rea de seguran√ßa digital, com foco em Analista de SOC/Blue Team. Tenho conciliado meu dia a dia com meu atual trabalho e com meus estudos pr√°ticos em seguran√ßa digital, redes, sistemas e testes de intrus√£o.\n\n‚Äã‚Äã‚Äã‚Äãüó∫Ô∏è‚Äã Map of Content (MOC)\n\nRedes - MOC\n\n\n‚Äãüîó‚Äã Contato\n\nüìß leogalyze.dev@gmail.com\nüîó LinkedIn\nüêô GitHub\n\n\n‚ú® Ser humano √© errar. Cada erro ensina alguma coisa; ele mostra um caminho que voc√™ n√£o teria descoberto de outra forma. Sem erros, n√£o existe aprendizado, crescimento ou arte.\nEste site mostra minha evolu√ß√£o no caminho para a Ciberseguran√ßa.\n"},"map-of-Content-(MOC)/Redes---MOC":{"slug":"map-of-Content-(MOC)/Redes---MOC","filePath":"map of Content (MOC)/Redes - MOC.md","title":"Redes - MOC","links":["redes/OSI-e-TCP-IP/Modelo-OSI---O-que-√©","redes/OSI-e-TCP-IP/Modelo-OSI---Camadas","redes/OSI-e-TCP-IP/TCP-IP---O-que-√©","redes/OSI-e-TCP-IP/OSI-e-TCP-IP---Diferen√ßas","redes/Protocolos-de-Rede/IP-(v4-e-v6)---Funcionamento","redes/Protocolos-de-Rede/UDP-(User-Datagram-Protocol)---O-que-√©","redes/Protocolos-de-Rede/TCP-(Transmission-Control-Protocol)---O-que-√©","redes/Protocolos-de-Rede/TCP-e-UDP---Diferen√ßas","redes/Protocolos-de-Rede/ICMP-(Internet-Control-Message-Protocol)---O-que-√©","redes/Protocolos-de-Rede/HTTP-e-HTTPS---O-que-s√£o","redes/Protocolos-de-Rede/DNS-(Domain-Name-System)---O-que-√©","redes/Protocolos-de-Rede/ARP-(Address-Resolution-Protocol)---O-que-√©","redes/Protocolos-de-Rede/DHCP-(Dynamic-Host-Configuration-Protocol)---O-que-√©","redes/Endere√ßamento-e-Sub-redes/Endere√ßamento---IPv4-e-IPv6","redes/Endere√ßamento-e-Sub-redes/M√°scaras-de-Rede-e-Sub-rede---O-que-s√£o","redes/Endere√ßamento-e-Sub-redes/Segmenta√ß√£o-de-Redes---O-que-√©","redes/Endere√ßamento-e-Sub-redes/C√°lculo-de-Sub-redes-com-CIDR","redes/Firewalls,-Switches-e-Roteadores/Switches---O-que-s√£o","redes/Firewalls,-Switches-e-Roteadores/Roteadores---O-que-s√£o","redes/Firewalls,-Switches-e-Roteadores/Roteamento-na-Pr√°tica---Est√°tico-e-Din√¢mico","redes/Firewalls,-Switches-e-Roteadores/Firewall---O-que-√©","redes/Firewalls,-Switches-e-Roteadores/VLANs-(Virtual-Local-Area-Networks)---O-que-s√£o","redes/Firewalls,-Switches-e-Roteadores/Segmenta√ß√£o-de-Redes-com-VLANs-e-Firewalls","redes/Firewalls,-Switches-e-Roteadores/Analisando-Configura√ß√µes-de-Firewalls-e-Identificando-Falhas"],"tags":[],"content":"Modelo OSI e TCP/IP:\n\nModelo OSI - O que √©\nModelo OSI - Camadas\nTCP-IP - O que √©\nOSI e TCP IP - Diferen√ßas\n\nProtocolos de Rede:\n\nIP (v4 e v6) - Funcionamento\nUDP (User Datagram Protocol) - O que √©\nTCP (Transmission Control Protocol) - O que √©\nTCP e UDP - Diferen√ßas\nICMP (Internet Control Message Protocol) - O que √©\nHTTP e HTTPS - O que s√£o\nDNS (Domain Name System) - O que √©\nARP (Address Resolution Protocol) - O que √©\nDHCP (Dynamic Host Configuration Protocol) - O que √©\n\nEndere√ßamento e Sub-redes:\n\nEndere√ßamento - IPv4 e IPv6\nM√°scaras de Rede e Sub-rede - O que s√£o\nSegmenta√ß√£o de Redes - O que √©\nC√°lculo de Sub-redes com CIDR\n\nFirewall, Switches e Roteadores:\n\nSwitches - O que s√£o\nRoteadores - O que s√£o\nRoteamento na Pr√°tica - Est√°tico e Din√¢mico\nFirewall - O que √©\nVLANs (Virtual Local Area Networks) - O que s√£o\nSegmenta√ß√£o de Redes com VLANs e Firewalls\nAnalisando Configura√ß√µes de Firewalls e Identificando Falhas\n\n"},"redes/Endere√ßamento-e-Sub-redes/C√°lculo-de-Sub-redes-com-CIDR":{"slug":"redes/Endere√ßamento-e-Sub-redes/C√°lculo-de-Sub-redes-com-CIDR","filePath":"redes/Endere√ßamento e Sub-redes/C√°lculo de Sub-redes com CIDR.md","title":"C√°lculo de Sub-redes com CIDR","links":["redes/Endere√ßamento-e-Sub-redes/Segmenta√ß√£o-de-Redes---O-que-√©"],"tags":["Redes","Enderecamento_SubRedes"],"content":"\nConceito Geral\n1. O que √© CIDR?\n\nCIDR (Classless Inter-Domain Routing) ‚Üí forma moderna de representar redes.\nSintaxe: IP/prefixo\n\nEx: 192.168.1.0/24\n\n\nO /n significa quantos bits da m√°scara s√£o usados para a rede.\n\n/24 ‚Üí 24 bits rede + 8 bits host.\nM√°scara decimal: 255.255.255.0.\n\n\n\n\n2. Passos para calcular uma sub-rede\n\nIdentificar a m√°scara/prefixo ‚Üí quantos bits s√£o rede/host.\nCalcular n√∫mero de endere√ßos ‚Üí 2^(bits de host).\nCalcular hosts utiliz√°veis ‚Üí 2^(bits de host) ‚Äì 2 (rede + broadcast n√£o podem ser usados).\nDefinir incrementos (block size) ‚Üí 256 ‚Äì valor do √∫ltimo octeto da m√°scara.\nListar redes poss√≠veis ‚Üí somando o block size.\n\n\n3. Exemplos pr√°ticos\nExemplo 1 ‚Äî /26\nRede: 192.168.1.0/26\n\nM√°scara: 255.255.255.192\nBits de host: 6\nEndere√ßos totais: 2^6 = 64\nHosts v√°lidos: 62\nBlock size: 256 ‚Äì 192 = 64\nSub-redes:\n\n192.168.1.0 ‚Äì 192.168.1.63\n192.168.1.64 ‚Äì 192.168.1.127\n192.168.1.128 ‚Äì 192.168.1.191\n192.168.1.192 ‚Äì 192.168.1.255\n\n\n\n\nExemplo 2 ‚Äî /29\nRede: 10.0.0.0/29\n\nM√°scara: 255.255.255.248\nBits de host: 3\nEndere√ßos totais: 2^3 = 8\nHosts v√°lidos: 6\nBlock size: 256 ‚Äì 248 = 8\nSub-redes:\n\n10.0.0.0 ‚Äì 10.0.0.7\n10.0.0.8 ‚Äì 10.0.0.15\n10.0.0.16 ‚Äì 10.0.0.23 ‚Ä¶\n\n\n\n\nExemplo 3 ‚Äî /20\nRede: 172.16.0.0/20\n\nM√°scara: 255.255.240.0\nBits de host: 12\nEndere√ßos totais: 2^12 = 4096\nHosts v√°lidos: 4094\nBlock size: 256 ‚Äì 240 = 16\nSub-redes:\n\n172.16.0.0 ‚Äì 172.16.15.255\n172.16.16.0 ‚Äì 172.16.31.255\n172.16.32.0 ‚Äì 172.16.47.255 ‚Ä¶\n\n\n\n\n4. F√≥rmulas r√°pidas\n\nHosts v√°lidos = 2^(bits de host) ‚Äì 2\nSub-redes poss√≠veis = 2^(bits emprestados)\nBlock size = 256 ‚Äì √∫ltimo octeto da m√°scara\n\n\n5. IPv6\n\nMais simples: sempre /64 para hosts.\nSubnetting usado apenas para organiza√ß√£o hier√°rquica (ex: /48 ‚Üí /64).\n\n\n6. Ferramentas √∫teis\n\nLinux:\nipcalc 192.168.1.0/26\nWindows: n√£o tem nativo, mas pode usar sites como subnet-calculator.org.\nCTFs/Labs: sempre que pedir planejamento de rede, aplicar esse c√°lculo.\n\n\nResumo:\n\nCIDR = define quantos bits da m√°scara s√£o rede.\nSubnetting = dividir redes maiores em menores usando CIDR.\nF√≥rmulas + block size = sua ‚Äúcalculadora mental‚Äù de sub-redes.\n\n\nNotas relacionadas:\nSegmenta√ß√£o de Redes - O que √©\n"},"redes/Endere√ßamento-e-Sub-redes/Endere√ßamento---IPv4-e-IPv6":{"slug":"redes/Endere√ßamento-e-Sub-redes/Endere√ßamento---IPv4-e-IPv6","filePath":"redes/Endere√ßamento e Sub-redes/Endere√ßamento - IPv4 e IPv6.md","title":"Endere√ßamento - IPv4 e IPv6","links":["redes/Protocolos-de-Rede/IP-(v4-e-v6)---Funcionamento"],"tags":["Redes","Enderecamento_SubRedes"],"content":"\nConceito Geral\nIP (Internet Protocol): identificador √∫nico para cada dispositivo na rede, funcionando como um ‚Äúendere√ßo de casa‚Äù para comunica√ß√£o. Atua na Camada 3 (Rede) do modelo OSI.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaracter√≠sticaIPv4IPv6Tamanho32 bits128 bitsFormatoDecimalHexadecimalCapacidade~4,3 bilh√µesQuase infinitoNATEssencialOpcionalBroadcastSimN√£o (usa Multicast)Seguran√ßaOpcional (IPSec)Nativo (IPSec embutido)Configura√ß√£oManual/DHCPSLAAC (auto) ou DHCPv6\n\nRegra visual:\nSe tem pontos, √© IPv4.\nSe tem dois-pontos, √© IPv6.\n\nEstrutura do Endere√ßo\n\nIPv4 (32 bits) ‚Üí Rede + Host\n\nExemplo: 192.168.1.10/24\n\n\nIPv6 (128 bits) ‚Üí Prefixo + Interface ID\n\nExemplo: 2001:db8:abcd:1234::1/64\n\n\n\n\nM√°scara / Prefixo\n\nCIDR (/n) define onde termina a parte de rede e come√ßa a parte de host.\nIPv4 ‚Üí m√°scara de sub-rede (ex: /24 = 255.255.255.0).\nIPv6 ‚Üí prefixos maiores (/64, /48), foco em organiza√ß√£o.\n\n\nTipos de Endere√ßos\nIPv4\n\nRede (Network ID): primeiro IP do bloco.\nHost: IP utiliz√°vel para m√°quina.\nBroadcast: √∫ltimo IP (ex: 192.168.1.255).\nPrivado: (10/8, 172.16/12, 192.168/16).\nP√∫blico: rote√°vel na internet.\nLoopback: 127.0.0.1.\nAPIPA: 169.254.0.0/16.\n\nIPv6\n\nUnicast Global: equivalente ao IPv4 p√∫blico.\nLink-local: fe80::/10, obrigat√≥rio.\nLoopback: ::1.\nMulticast: ff00::/8.\nAnycast: mesmo IP em v√°rios hosts ‚Üí roteamento p/ o mais pr√≥ximo.\n\n\nEscopos de Endere√ßamento\n\nPrivado vs P√∫blico (IPv4).\nGlobal vs Local (IPv6).\nDefine o alcance da comunica√ß√£o.\n\n\nSub-redes (Subnetting)\n\nDividir redes em partes menores.\nIPv4: otimiza√ß√£o e isolamento de segmentos.\nIPv6: abund√¢ncia de endere√ßos ‚Üí foco em hierarquia e organiza√ß√£o.\n\n\nüìå IPv4\n\nTamanho: 32 bits (4 octetos ‚Üí 0 a 255 cada).\nFormato: decimal com pontos ‚Üí 192.168.0.1.\nCapacidade: ~4,3 bilh√µes de endere√ßos.\nProblema: escassez de endere√ßos (por isso surgiu o IPv6).\n\nClasses (conceito cl√°ssico, n√£o muito usado hoje, mas importante saber)\n\nClasse A: 1.0.0.0 ‚Äì 126.255.255.255 ‚Üí redes grandes.\nClasse B: 128.0.0.0 ‚Äì 191.255.255.255 ‚Üí m√©dias.\nClasse C: 192.0.0.0 ‚Äì 223.255.255.255 ‚Üí pequenas.\n(D ‚Üí multicast | E ‚Üí experimental)\n\nTipos de endere√ßos IPv4\n\nP√∫blico: rote√°vel na internet.\nPrivado: s√≥ funciona em LAN (NAT necess√°rio p/ internet).\n\n10.0.0.0/8\n172.16.0.0/12\n192.168.0.0/16\n\n\nLoopback: 127.0.0.1 (localhost).\nAPIPA: 169.254.0.0/16 (quando n√£o consegue DHCP).\nBroadcast: √∫ltimo IP de uma rede (ex: 192.168.1.255).\nRede (Network ID): primeiro IP da rede (ex: 192.168.1.0).\n\n\nüìåIPv6\n\nTamanho: 128 bits.\nFormato: hexadecimal, 8 blocos separados por ‚Äú:‚Äù.\nEx: 2001:0db8:85a3:0000:0000:8a2e:0370:7334\n(Pode encurtar zeros: 2001:db8:85a3::8a2e:370:7334)\nCapacidade: praticamente infinita (3,4√ó10^38 endere√ßos).\n\nTipos de endere√ßos IPv6\n\nUnicast Global: equivalente ao IPv4 p√∫blico.\nLink-Local: obrigat√≥rio, prefixo fe80::/10 (funciona dentro do segmento local, como o ARP no IPv4).\nLoopback: ::1.\nMulticast: substitui broadcast (ff00::/8).\nAnycast: mesmo endere√ßo em m√∫ltiplos hosts, roteado p/ o mais pr√≥ximo.\n\nCaracter√≠sticas Importantes\n\nSem NAT (cada dispositivo pode ter IP p√∫blico).\nSeguran√ßa integrada (IPSec obrigat√≥rio).\nAutoconfigura√ß√£o (SLAAC).\n\n\nResumo:\nEndere√ßamento √© a linguagem de endere√ßos da rede ‚Üí como identificar m√°quinas, separar redes, definir alcance (local/global), e calcular blocos de endere√ßos (sub-redes).\n\nNotas relacionadas:\nIP (v4 e v6) - Funcionamento\n"},"redes/Endere√ßamento-e-Sub-redes/M√°scaras-de-Rede-e-Sub-rede---O-que-s√£o":{"slug":"redes/Endere√ßamento-e-Sub-redes/M√°scaras-de-Rede-e-Sub-rede---O-que-s√£o","filePath":"redes/Endere√ßamento e Sub-redes/M√°scaras de Rede e Sub-rede - O que s√£o.md","title":"M√°scara de Rede e M√°scaras de Sub-rede, o que s√£o?","links":[],"tags":["Redes","Enderecamento_SubRedes"],"content":"\nConceito Geral\n‚Äãüìå M√°scara de Rede (Classful)\n1. Conceito\n\nM√°scara de rede = define qual parte do endere√ßo IP identifica a rede e qual parte identifica o host.\nNo modelo antigo (classful), cada classe tinha uma m√°scara fixa e pr√©-definida.\nIsso √© feito alterando a m√°scara para ‚Äúemprestar bits‚Äù da parte de host.\nEvita desperd√≠cio e melhora organiza√ß√£o/seguran√ßa da rede.\n\n\n2. Classes e M√°scaras Padr√£o\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nClasseFaixa de Endere√ßosM√°scara Padr√£oCIDRHosts dispon√≠veisA1.0.0.0 ‚Äì 126.255.255.255255.0.0.0/8~16 milh√µesB128.0.0.0 ‚Äì 191.255.255.255255.255.0.0/16~65 milC192.0.0.0 ‚Äì 223.255.255.255255.255.255.0/24254D224.0.0.0 ‚Äì 239.255.255.255Multicast‚Äì‚ÄìE240.0.0.0 ‚Äì 255.255.255.255Experimental‚Äì‚Äì\n\n3. Caracter√≠sticas\n\n\nSimples de entender.\n\n\nMuito desperd√≠cio de IPs (uma empresa pequena recebia /16 com milhares de IPs que nunca usava).\n\n\nFoi substitu√≠do pelo modelo classless (CIDR), que √© muito mais eficiente.\n\n\n\nResumo:\nM√°scara de rede (classful) = padr√£o fixo, ligado √†s classes A, B e C. Hoje √© mais hist√≥rico, mas essencial para entender a evolu√ß√£o.\n\n\nüìå M√°scara de Sub-rede (Subnetting com CIDR)\n1. Conceito\n\n\nSubnetting = t√©cnica para dividir uma rede maior em v√°rias menores.\n\n\nUtiliza CIDR (Classless Inter-Domain Routing), que permite m√°scaras vari√°veis (/n).\n\n\n\n2. Como funciona\n\nIP = rede + host.\nA m√°scara define onde termina a parte de rede.\nCIDR Notation: /n (quantos bits s√£o usados para rede).\n\nExemplo:\n\nIP: 192.168.1.10/24 ‚Üí 24 bits rede, 8 bits host.\nSe mudo para /26 ‚Üí 26 bits rede, 6 bits host ‚Üí rede menor.\n\n\n\n\n\n\n3. F√≥rmulas\n\nN√∫mero de hosts por rede: 2^(bits de host) ‚Äì 2\nN√∫mero de sub-redes: `2^(bits emprestados)‚Äú\n\n\n4. Exemplo pr√°tico\nRede original: 192.168.1.0/24\nQuero 4 redes menores.\n\nUso /26 ‚Üí 64 endere√ßos por rede (62 utiliz√°veis).\nRedes criadas:\n\n192.168.1.0 ‚Äì 192.168.1.63\n192.168.1.64 ‚Äì 192.168.1.127\n192.168.1.128 ‚Äì 192.168.1.191\n192.168.1.192 ‚Äì 192.168.1.255\n\n\n\n\n5. M√°scaras Comuns (IPv4)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCIDRM√°scara decimalHosts v√°lidos/30255.255.255.2522/29255.255.255.2486/28255.255.255.24014/27255.255.255.22430/26255.255.255.19262/25255.255.255.128126/24255.255.255.0254\n\nIPv6\n\nSempre dividido em /64 (64 bits rede + 64 bits host).\nSubnetting no IPv6 √© mais sobre organiza√ß√£o hier√°rquica, n√£o economia.\n\n\nResumo:\n\nM√°scara de rede ‚Üí conceito antigo, classes fixas.\nM√°scara de sub-rede ‚Üí conceito moderno (CIDR), flex√≠vel, usado em qualquer rede hoje.\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏Ponto de vista de Ataque\n\n\nReconhecimento (Scanning):\n\nQuando um atacante descobre o IP de uma m√°quina, ele vai tentar deduzir a m√°scara/sub-rede para saber quantos hosts est√£o no mesmo segmento.\nExemplo: se o alvo est√° em 192.168.1.34/24, o atacante sabe que potencialmente tem 254 m√°quinas v√°lidas para escanear no mesmo broadcast domain.\nIsso amplia a superf√≠cie de ataque.\n\n\n\nMovimenta√ß√£o lateral:\n\nEm redes sem segmenta√ß√£o (uma √∫nica /24 ou /16 enorme), se o atacante comprometer uma m√°quina, ele pode escanear e atacar facilmente as demais, porque est√£o no mesmo dom√≠nio de broadcast.\nIsso facilita ataques como ARP spoofing, sniffing e propaga√ß√£o de malware.\n\n\n\nIdentifica√ß√£o de redes privilegiadas:\n\nSe um atacante percebe que h√° sub-redes diferentes para servidores, usu√°rios e dispositivos de seguran√ßa, ele pode tentar priorizar o acesso √† rede ‚Äúcerta‚Äù.\nExemplo: notar que 10.0.10.0/24 √© rede de usu√°rios e 10.0.20.0/24 √© rede de banco de dados ‚Üí alvo valioso detectado.\n\n\n\n\nüîπPonto de vista de Defesa\n\n\nRedu√ß√£o da superf√≠cie de ataque:\n\nUsando sub-redes menores (/26, /28), voc√™ reduz a quantidade de hosts que compartilham o mesmo broadcast domain.\nIsso dificulta varreduras em massa e limita impacto de ataques de rede locais.\n\n\n\nIsolamento por fun√ß√£o (Segrega√ß√£o de Rede):\n\nSeparar redes de usu√°rios, servidores, IoT, sistemas cr√≠ticos, gest√£o.\nMesmo que um atacante entre em uma m√°quina de usu√°rio, n√£o ter√° acesso direto ao banco de dados ou ao firewall.\nExemplo: usar VLANs + ACLs + Firewalls para aplicar regras como ‚ÄúRede de usu√°rios n√£o acessa diretamente a rede de banco de dados‚Äù.\n\n\n\nMonitoramento mais granular:\n\nCom redes segmentadas, o tr√°fego entre sub-redes passa por roteadores/firewalls ‚Üí visibilidade e logs.\nIsso permite detectar movimenta√ß√£o lateral suspeita.\n\n\n\nDefesa em profundidade:\n\nUm incidente em uma rede n√£o compromete o restante.\nExemplo: se um ransomware pega a rede de usu√°rios, a rede de servidores ainda pode estar protegida se bem segmentada.\n\n\n\n\nResumo:\n\nAtaque: M√°scara/sub-rede grande = playground enorme para o invasor.\nDefesa: Segmenta√ß√£o e sub-redes pequenas = limitar impacto, aumentar visibilidade e controle.\n\n"},"redes/Endere√ßamento-e-Sub-redes/Segmenta√ß√£o-de-Redes---O-que-√©":{"slug":"redes/Endere√ßamento-e-Sub-redes/Segmenta√ß√£o-de-Redes---O-que-√©","filePath":"redes/Endere√ßamento e Sub-redes/Segmenta√ß√£o de Redes - O que √©.md","title":"Segmenta√ß√£o de Redes - O que √©","links":["redes/Endere√ßamento-e-Sub-redes/C√°lculo-de-Sub-redes-com-CIDR"],"tags":["Redes","Enderecamento_SubRedes"],"content":"\nConceito Geral\n\nSegmentar uma rede = dividir uma rede maior em redes menores (sub-redes).\nCada sub-rede funciona como um bairro dentro da cidade, ainda conectado, mas com fronteiras bem definidas.\nPode ser feita em:\n\nCamada 3 (Rede): via subnets (m√°scaras de sub-rede, VLANs).\nCamada 2 (Enlace): via switches e VLANs.\n\n\n\n\n1. Por que segmentar?\na) Seguran√ßa\n\nIsolar departamentos ‚Üí se o RH for atacado, o Financeiro n√£o √© afetado.\nFacilita aplica√ß√£o de firewalls, ACLs e pol√≠ticas espec√≠ficas.\n\nb) Performance\n\nMenos tr√°fego de broadcast ‚Üí a rede n√£o fica ‚Äúpolu√≠da‚Äù.\nMais efici√™ncia no roteamento.\n\nc) Organiza√ß√£o\n\nEmpresas grandes ‚Üí cada setor tem sua pr√≥pria sub-rede.\nFacilita controle de endere√ßos IP e troubleshooting.\n\nd) Escalabilidade\n\nPlanejamento de crescimento ‚Üí evita bagun√ßa de IPs no futuro.\n\n\n2. Exemplos pr√°ticos\nExemplo 1 - Rede simples em uma empresa\nRede original: 192.168.0.0/24\n\nTodos os dispositivos (financeiro, TI, RH, impressoras) na mesma rede.\nProblemas: muito broadcast, pouca seguran√ßa.\n\nSegmentando:\n\n192.168.0.0/26 ‚Üí Financeiro (62 hosts)\n192.168.0.64/26 ‚Üí RH (62 hosts)\n192.168.0.128/26 ‚Üí TI (62 hosts)\n192.168.0.192/26 ‚Üí Impressoras (62 hosts)\n\nAgora cada setor est√° isolado ‚Üí ataque de ransomware no RH n√£o derruba o Financeiro.\n\nExemplo 2 - VLANs em um switch\n\nVLAN 10 ‚Üí Rede de usu√°rios.\nVLAN 20 ‚Üí Rede de servidores.\nVLAN 30 ‚Üí Rede de impressoras.\nRoteador ou switch de camada 3 interliga VLANs ‚Üí s√≥ o tr√°fego permitido passa entre elas.\n\n\nExemplo 3 - Seguran√ßa ofensiva (pentest)\n\n\nSem segmenta√ß√£o: se o atacante entra na rede via um host vulner√°vel, consegue escaneamento lateral f√°cil (pivoting).\n\n\nCom segmenta√ß√£o: atacante fica preso na sub-rede ‚Üí precisa quebrar regras adicionais para avan√ßar.\n\n\n\n3. Ferramentas/Comandos √∫teis\n\nipcalc ‚Üí calcular sub-redes.\nping ‚Üí testar se sub-redes diferentes se comunicam.\ntraceroute ‚Üí visualizar caminho entre segmentos.\nnmap ‚Üí mapear hosts em sub-redes diferentes.\n\n\nResumo:\nSegmenta√ß√£o √© dividir para conquistar controle: mais seguran√ßa, melhor performance e redes mais organizadas.\n\nSem segmenta√ß√£o ‚Üí uma invas√£o se espalha r√°pido.\nCom segmenta√ß√£o ‚Üí o dano √© contido e a rede fica mais eficiente.\n\n\n\nAn√°lise ofensiva/defensiva\n‚Äãüî∏ Uso Ofensivo (Atacante / Pentester)\n\n\nPivoting lateral mais dif√≠cil\n\n\nSe a rede n√£o for segmentada ‚Üí basta comprometer uma m√°quina e j√° √© poss√≠vel escanear toda a rede interna.\n\n\nCom segmenta√ß√£o ‚Üí atacante precisa quebrar barreiras adicionais (ACL, firewall, VLAN hopping).\n\n\n\n\nAtaques direcionados a segmenta√ß√£o\n\n\nVLAN hopping ‚Üí t√©cnicas para sair da VLAN atribu√≠da e acessar outra.\n\n\nSniffing malicioso ‚Üí em rede mal segmentada, o atacante consegue capturar broadcasts de outros segmentos.\n\n\nBypass de ACLs ‚Üí se regras de firewall entre sub-redes forem mal configuradas, d√° para explorar servi√ßos internos n√£o protegidos.\n\n\n\n\nReconhecimento limitado\n\n\nSegmenta√ß√£o reduz a superf√≠cie de ataque vis√≠vel.\n\n\nAtacante precisa usar mais engenharia social ou explora√ß√£o de credenciais para saltar de uma rede para outra.\n\n\n\n\n\nüîπ Uso Defensivo (Blue Team / SOC / Arquiteto)\n\nConten√ß√£o de incidentes\n\nMalware em uma sub-rede n√£o se propaga automaticamente para todas as m√°quinas da empresa.\nAjuda em estrat√©gias de Zero Trust.\n\n\nMenor superf√≠cie de ataque\n\nServi√ßos cr√≠ticos (banco de dados, AD, servidores de backup) ficam em segmentos separados ‚Üí n√£o expostos para todos os hosts.\n\n\nMonitoramento mais eficaz\n\nTr√°fego entre segmentos precisa passar por roteador/firewall ‚Üí ponto √≥timo para monitorar logs, regras IDS/IPS e SIEM.\n\n\nAplica√ß√£o de pol√≠ticas espec√≠ficas\n\nEx: VLAN de convidados sem acesso √† rede interna.\nSegmentos cr√≠ticos s√≥ acess√≠veis via jumpbox/VPN.\n\n\n\n\nExemplo pr√°tico comparando\nRede √∫nica /24 (sem segmenta√ß√£o):\n\nAtacante invade uma m√°quina ‚Üí com um nmap 192.168.0.0/24 descobre todos os servi√ßos da empresa.\n\nRede segmentada em /26 (com firewall e VLANs):\n\nAtacante invade uma m√°quina no RH.\nS√≥ consegue enxergar hosts da rede RH.\nPara chegar no Financeiro, precisa quebrar regras de firewall ‚Üí aumenta chance de ser detectado.\n\n\nResumo:\n\nOfensivo: segmenta√ß√£o mal feita = brecha (VLAN hopping, ACLs fracas).\nDefensivo: segmenta√ß√£o bem feita = conten√ß√£o, monitoramento e menor superf√≠cie de ataque.\n\n\nNotas relacionadas:\nC√°lculo de Sub-redes com CIDR\n"},"redes/Firewalls,-Switches-e-Roteadores/Analisando-Configura√ß√µes-de-Firewalls-e-Identificando-Falhas":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Analisando-Configura√ß√µes-de-Firewalls-e-Identificando-Falhas","filePath":"redes/Firewalls, Switches e Roteadores/Analisando Configura√ß√µes de Firewalls e Identificando Falhas.md","title":"Analisando Configura√ß√µes de Firewalls e Identificando Falhas","links":["redes/Firewalls,-Switches-e-Roteadores/Firewall---O-que-√©"],"tags":["Redes"],"content":"\nConceito Geral\n\nFirewalls funcionam por meio de regras de acesso (ACLs), que permitem ou negam tr√°fego baseado em:\n\nIP de origem/destino\nPorta de origem/destino\nProtocolo (TCP, UDP, ICMP)\nDire√ß√£o (entrada ou sa√≠da)\n\n\nGeralmente existe uma regra impl√≠cita de nega√ß√£o (deny all) no final da lista.\nA an√°lise de configura√ß√£o envolve verificar se as regras seguem o princ√≠pio do menor privil√©gio e se n√£o h√° brechas explor√°veis.\n\n\nFalhas Comuns em Configura√ß√µes\n\nPermitir ‚Äúany to any‚Äù (tudo liberado).\nPortas administrativas expostas √† internet (SSH, RDP, Telnet).\nRegras redundantes ou mal ordenadas ‚Üí regra ampla antes da restritiva.\nFalta de segmenta√ß√£o (mesmas regras para diferentes redes).\nAus√™ncia de logs e alertas (ningu√©m sabe o que est√° passando).\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ An√°lise Ofensiva (Ataques Poss√≠veis)\n\nVarredura com Nmap ‚Üí identificar portas e servi√ßos expostos.\nBypass de firewall via tunelamento (DNS, ICMP, HTTPS).\nExplora√ß√£o de regras permissivas ‚Üí pivoting entre VLANs.\nBruteforce em portas administrativas se estiverem abertas.\n\n\nüîπ An√°lise Defensiva (Boas Pr√°ticas)\n\nAplicar o princ√≠pio do least privilege ‚Üí liberar apenas o necess√°rio.\nAdotar pol√≠tica ‚Äúdeny by default‚Äù ‚Üí come√ßa bloqueado, abre conforme necessidade.\nSegregar redes (usu√°rios, servidores, convidados) com regras distintas.\nMonitorar logs em SIEM/IDS para detectar tr√°fego suspeito.\nHardening do firewall:\n\nSenhas fortes e MFA.\nAcesso administrativo restrito (somente interno/VPN).\nAtualiza√ß√µes de firmware/software.\n\n\n\n\nResumo:\nAnalisar configura√ß√µes de firewall √© enxergar al√©m das regras: √© buscar brechas explor√°veis e aplicar controles restritivos. Um firewall mal configurado equivale a porta destrancada em um cofre ‚Äî parece protegido, mas est√° aberto para ataques.\n\n\nChecklist de Revis√£o de Firewall\nüîí Configura√ß√£o B√°sica\n\nExiste uma pol√≠tica padr√£o de deny all no final da lista de regras?\nAs regras seguem o princ√≠pio do least privilege (apenas o necess√°rio est√° liberado)?\nExistem regras redundantes ou conflitantes que podem causar brechas?\n\n\nüåê Portas e Servi√ßos\n\nApenas as portas estritamente necess√°rias est√£o abertas?\nPortas administrativas (SSH, RDP, Telnet, WinRM) est√£o restritas a redes internas/VPN?\nServi√ßos legados ou inseguros (ex.: Telnet, FTP sem TLS) est√£o desabilitados?\n\n\nüß© Segmenta√ß√£o e Pol√≠ticas\n\nCada rede/VLAN possui regras pr√≥prias (usu√°rios, servidores, convidados, IoT)?\nExiste controle de tr√°fego entre VLANs (n√£o est√° tudo liberado)?\nRedes de convidados/externas est√£o totalmente isoladas da rede corporativa?\n\n\nüìä Monitoramento e Logs\n\nO logging est√° habilitado para conex√µes permitidas e bloqueadas?\nOs logs s√£o enviados para um SIEM ou servidor central?\nExistem alertas configurados para acessos incomuns ou suspeitos?\n\n\nüõ°Ô∏è Hardening do Firewall\n\nO acesso administrativo ao firewall √© restrito (somente interno/VPN)?\nEst√£o sendo usadas senhas fortes e, se poss√≠vel, MFA?\nO firewall est√° atualizado (firmware/software)?\nInterfaces de gerenciamento desnecess√°rias est√£o desabilitadas?\n\n\nResumo:\nSempre revise um firewall perguntando:\n\nO que est√° realmente aberto?\nQuem pode acessar?\nIsso √© necess√°rio?\n\n\nNotas relacionadas:\nFirewall - O que √©\n"},"redes/Firewalls,-Switches-e-Roteadores/Firewall---O-que-√©":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Firewall---O-que-√©","filePath":"redes/Firewalls, Switches e Roteadores/Firewall - O que √©.md","title":"Firewall - O que √© ?","links":["redes/Firewalls,-Switches-e-Roteadores/Segmenta√ß√£o-de-Redes-com-VLANs-e-Firewalls","redes/Firewalls,-Switches-e-Roteadores/Analisando-Configura√ß√µes-de-Firewalls-e-Identificando-Falhas"],"tags":["Redes"],"content":"\nConceito Geral\nO que √© um Firewall?\nUm firewall √© um sistema de seguran√ßa que controla o tr√°fego de rede com base em regras definidas.\nEle decide se um pacote pode entrar, sair ou ser bloqueado de acordo com pol√≠ticas de seguran√ßa.\n\nPensa nele como o porteiro de um pr√©dio: s√≥ entra quem tem permiss√£o.\n\n\nTipos de Firewalls\n\n\nPacket Filtering (Camada 3/4 ‚Äì Rede/Transporte)\n\nAnalisa IP, porta, protocolo.\nSimples e r√°pido, mas n√£o v√™ conte√∫do.\nExemplo: regras iptables no Linux.\n\n\n\nStateful Firewall\n\nMant√©m estado da conex√£o (TCP handshake).\nExemplo: sabe diferenciar SYN de ACK.\nMais seguro que s√≥ filtro de pacotes.\n\n\n\nApplication Firewall (Camada 7 ‚Äì Aplica√ß√£o)\n\nEntende protocolos como HTTP, DNS, FTP.\nPode bloquear ataques de aplica√ß√£o.\nExemplo: WAF (Web Application Firewall) ‚Üí protege contra SQLi, XSS.\n\n\n\nNext-Gen Firewall (NGFW)\n\nIntegra IDS/IPS, antiv√≠rus, sandbox.\nFaz inspe√ß√£o profunda de pacotes (DPI).\n\n\n\n\nExemplo pr√°tico (Linux ‚Äì iptables)\n# Bloquear todo tr√°fego de entrada por padr√£o\niptables -P INPUT DROP\n\n# Permitir tr√°fego de sa√≠da\niptables -P OUTPUT ACCEPT\n\n# Permitir conex√µes estabelecidas\niptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT\n\n# Permitir SSH na porta 22\niptables -A INPUT -p tcp --dport 22 -j ACCEPT\n\n# Permitir HTTP/HTTPS\niptables -A INPUT -p tcp -m multiport --dports 80,443 -j ACCEPT\n\n\nAqui voc√™ cria sua pol√≠tica default deny e libera s√≥ o que interessa.\n\n\nTipos de implementa√ß√£o\nFirewall como Dispositivo (Hardware Firewall)\n\n√â um appliance dedicado (caixa f√≠sica) que fica na borda da rede.\nExemplo: Fortinet FortiGate, Cisco ASA, Palo Alto.\nNormalmente tem sistema pr√≥prio, alto desempenho e m√∫ltiplas interfaces.\nUsado em empresas para proteger redes inteiras.\n\nFirewall como Software (Software Firewall)\n\nRoda dentro de um sistema operacional.\nPode ser em servidores, desktops ou at√© em roteadores caseiros.\nExemplos:\n\niptables / nftables (Linux)\nWindows Defender Firewall\npf (BSD, usado em firewalls como pfSense e OPNsense)\n\n\n\nFirewall H√≠brido (Virtual / Cloud)\n\nHoje em dia, com cloud computing, temos firewalls virtuais.\nS√£o softwares que simulam appliances em nuvem.\nExemplo: AWS Security Groups, Azure Firewall.\n\nComo entender a diferen√ßa\n\nDispositivo ‚Üí especializado, dedicado, f√≠sico (mas internamente roda software tamb√©m).\nSoftware ‚Üí programa que roda num sistema j√° existente.\n\n\nO conceito central continua sendo o mesmo: filtrar e inspecionar pacotes.\nO que muda √© o contexto de uso (casa, servidor, empresa, nuvem).\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ Ofensiva (como atacantes lidam com Firewalls)\n\nPort Scanning evasivo (Nmap com t√©cnicas de fragmenta√ß√£o ou slow scan).\nTunneling (usar HTTP/HTTPS para encapsular outro tr√°fego).\nBypass via servi√ßos mal configurados (ex: porta 22 aberta para o mundo).\nExplora√ß√£o de falhas em firewalls NGFW/WAF (ex: regras mal escritas, bypass de regex).\n\nüîπ Defensiva (como proteger com Firewalls)\n\nPol√≠tica default deny (bloquear tudo, liberar s√≥ o necess√°rio).\nRegras granulares por IP, porta e protocolo.\nMonitoramento de logs do firewall.\nUso de firewall em camadas (host-based + network-based).\nRevis√£o peri√≥dica das regras ‚Üí evitar portas esquecidas.\n\n\n‚Äã‚ùó Onde Firewalls entram na arquitetura de seguran√ßa\n\nNa borda da rede ‚Üí protege LAN contra a Internet.\nInternamente ‚Üí segmenta redes (ex: servidores cr√≠ticos vs usu√°rios comuns).\nNo host ‚Üí firewall pessoal (Windows Defender Firewall, UFW no Linux).\n\n\nNotas relacionadas:\nSegmenta√ß√£o de Redes com VLANs e Firewalls\nAnalisando Configura√ß√µes de Firewalls e Identificando Falhas\n"},"redes/Firewalls,-Switches-e-Roteadores/Roteadores---O-que-s√£o":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Roteadores---O-que-s√£o","filePath":"redes/Firewalls, Switches e Roteadores/Roteadores - O que s√£o.md","title":"Roteador - O que √© ?","links":["redes/Firewalls,-Switches-e-Roteadores/Roteamento-na-Pr√°tica---Est√°tico-e-Din√¢mico"],"tags":["Redes"],"content":"\nConceito Geral\nO que s√£o?\n\nFun√ß√£o: Interligar redes diferentes e rotear pacotes entre elas.\nDispositivos de camada 3 (Rede) do modelo OSI.\nRespons√°veis por encaminhar pacotes entre redes diferentes.\nFazem uso de endere√ßos IP e tabelas de roteamento para decidir o melhor caminho.\nDiferente dos switches (que conectam hosts dentro da mesma rede), os roteadores conectam redes distintas.\n\n\nFun√ß√µes principais\n\nEncaminhar pacotes entre redes locais e externas.\nInterligar LANs e WANs.\nEscolher rotas com base em tabelas de roteamento.\nTraduzir endere√ßos (NAT/PAT ‚Üí conectar rede privada com internet).\nFiltrar tr√°fego (ACLs, controle b√°sico de pacotes).\n\n\nComo usar (na pr√°tica de redes)\n\nConfigurar endere√ßos IP em interfaces (ex: GigabitEthernet0/0).\nDefinir rotas est√°ticas ou usar protocolos de roteamento din√¢mico (RIP, OSPF, BGP).\nAtivar NAT/PAT para dar acesso √† Internet a redes privadas.\nAplicar ACLs (Access Control Lists) para controlar quem acessa o qu√™.\n\n\nTipos de roteamento\n\nEst√°tico ‚Üí admin define manualmente cada rota (mais controle, menos flex√≠vel).\nDin√¢mico ‚Üí protocolos trocam rotas automaticamente (mais adapt√°vel, usado em redes grandes).\nPadr√£o (default route) ‚Üí rota de sa√≠da quando n√£o conhece o destino.\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ An√°lise Ofensiva (Ataques em cima de roteadores)\n\nConfigura√ß√µes fracas ou padr√£o ‚Üí credenciais default, portas abertas (Telnet, HTTP sem TLS).\nAtaques de roteamento:\n\nRoute injection ‚Üí inserir rotas falsas em protocolos din√¢micos (ex: OSPF spoofing).\nBGP hijacking ‚Üí redirecionar tr√°fego global da Internet.\n\n\nDoS/DDoS ‚Üí sobrecarregar a tabela de roteamento.\nExplora√ß√£o de firmware vulner√°vel ‚Üí acesso root ao roteador.\nPivoting ‚Üí usar o roteador comprometido como ponto de entrada para atacar a rede interna.\n\n\nüîπ An√°lise Defensiva (Mitiga√ß√£o e boas pr√°ticas)\n\nTrocar senhas padr√£o e usar SSH/HTTPS no lugar de Telnet/HTTP.\nAtualizar firmware regularmente.\nAplicar ACLs para limitar acesso administrativo.\nSegregar planos:\n\nData plane (dados de usu√°rios),\nControl plane (protocolos de roteamento),\nManagement plane (administra√ß√£o).\n\n\nProtocolos seguros de roteamento (OSPFv3 com autentica√ß√£o, BGP com TTL Security e RPKI).\nMonitoramento e logging ‚Üí detectar rotas estranhas ou tr√°fego suspeito.\n\n\nResumo:\n\nRoteadores conectam redes diferentes e decidem o caminho do tr√°fego.\nOfensivamente ‚Üí alvo cr√≠tico para manipula√ß√£o de tr√°fego ou espionagem.\nDefensivamente ‚Üí precisam de hardening (ACLs, updates, protocolos seguros).\n\n\nNotas relacionadas:\nRoteamento na Pr√°tica - Est√°tico e Din√¢mico\n"},"redes/Firewalls,-Switches-e-Roteadores/Roteamento-na-Pr√°tica---Est√°tico-e-Din√¢mico":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Roteamento-na-Pr√°tica---Est√°tico-e-Din√¢mico","filePath":"redes/Firewalls, Switches e Roteadores/Roteamento na Pr√°tica - Est√°tico e Din√¢mico.md","title":"Roteamento na Pratica - Est√°tico e Din√¢mico","links":["redes/Firewalls,-Switches-e-Roteadores/Roteadores---O-que-s√£o"],"tags":["Redes"],"content":"\nConceito Geral\nO que √© Roteamento?\nRoteamento √© o processo de escolher o melhor caminho para que pacotes de dados cheguem de uma rede a outra.\n\n\nPode ser manual (est√°tico) ou autom√°tico (din√¢mico).\n\n\nFun√ß√£o central dos roteadores.\n\n\n\nüìå Roteamento Est√°tico\n\nConfigurado manualmente pelo administrador.\nBom para redes pequenas, controle total.\nPouca escalabilidade, sujeito a erros humanos.\n\nExemplo\nCen√°rio:\n\nRede A ‚Üí 192.168.1.0/24\nRede B ‚Üí 192.168.2.0/24\nRede C ‚Üí 192.168.3.0/24\n\n# No Roteador1 (rede 192.168.1.0/24):\nip route 192.168.2.0 255.255.255.0 10.0.0.2\nip route 192.168.3.0 255.255.255.0 10.0.0.6\n\n# No Roteador2 (rede 192.168.2.0/24):\nip route 192.168.1.0 255.255.255.0 10.0.0.1\nip route 192.168.3.0 255.255.255.0 10.0.0.6\n\n\nCada rota diz: ‚Äúpara chegar nessa rede, use esse gateway‚Äù.\n\n\nüìå Roteamento Din√¢mico\n\nProtocolos especializados (RIP, OSPF, BGP, EIGRP).\nOs roteadores trocam informa√ß√µes automaticamente.\nEscal√°vel, resiliente, mas mais complexo.\n\nExemplo com OSPF\nrouter ospf 1\n network 192.168.1.0 0.0.0.255 area 0\n network 10.0.0.0 0.0.0.3 area 0\n\n\nO roteador anuncia suas redes ‚Üí os outros aprendem sozinhos.\n\n\nCompara√ß√£o\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCrit√©rioEst√°ticoDin√¢micoConfigura√ß√£oManualAutom√°ticaEscalabilidadeBaixaAltaToler√¢ncia a falhasBaixaAltaSeguran√ßaSimples (se fechado)Exige autentica√ß√£o de protocolosUso t√≠picoRedes pequenas, labsRedes m√©dias/grandes, ISPs\n\n\nAn√°lise ofensiva/defensiva\nüî∏ Ofensiva\n\nEst√°tico: alterar rotas no roteador ‚Üí redirecionar tr√°fego.\nDin√¢mico: ataques de route injection (ex: OSPF spoofing), redirecionando pacotes para o atacante.\n\nüîπ Defensiva\n\nSegmentar redes cr√≠ticas.\nProteger acessos administrativos (SSH, console).\nAutentica√ß√£o em protocolos de roteamento (MD5/HMAC).\nMonitoramento de tabelas de roteamento para detectar anomalias.\n\n\nNotas relacionadas:\nRoteadores - O que s√£o\n"},"redes/Firewalls,-Switches-e-Roteadores/Segmenta√ß√£o-de-Redes-com-VLANs-e-Firewalls":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Segmenta√ß√£o-de-Redes-com-VLANs-e-Firewalls","filePath":"redes/Firewalls, Switches e Roteadores/Segmenta√ß√£o de Redes com VLANs e Firewalls.md","title":"Segmenta√ß√£o de Redes com VLANs e Firewalls","links":["redes/Firewalls,-Switches-e-Roteadores/VLANs-(Virtual-Local-Area-Networks)---O-que-s√£o","redes/Firewalls,-Switches-e-Roteadores/Firewall---O-que-√©"],"tags":["Redes"],"content":"\nConceito Geral\nO que √©\n\nSegmenta√ß√£o de redes √© o processo de dividir uma rede em partes menores e isoladas, cada uma com regras e controles pr√≥prios.\nCombinando VLANs (separa√ß√£o l√≥gica) + Firewalls (controle de tr√°fego), criamos camadas de defesa que dificultam a movimenta√ß√£o de um atacante.\n\n\nComo funciona\n\nSwitches criam VLANs ‚Üí isolam grupos de dispositivos (ex.: usu√°rios, servidores, convidados).\nRoteadores ou Firewalls fazem o roteamento entre VLANs ‚Üí decidem quem pode falar com quem.\nACLs ou regras de firewall aplicam pol√≠ticas de seguran√ßa ‚Üí bloqueiam tr√°fego desnecess√°rio ou suspeito.\n\n\nPor que segmentar?\n\nSeguran√ßa: limita o alcance de ataques (ex.: malware em uma VLAN n√£o atinge toda a rede).\nConformidade: exig√™ncia de normas (ex.: PCI-DSS obriga separar redes de pagamento).\nControle: regras diferentes para setores distintos (ex.: visitas n√£o acessam rede administrativa).\nPerformance: menos broadcast circulando em toda a rede.\n\n\nExemplos pr√°ticos\nCen√°rio 1 ‚Üí Empresa com tr√™s redes principais\n\nVLAN 10: Financeiro\nVLAN 20: RH\nVLAN 30: TI\nVLAN 99: Guest\n\nFirewall define:\n\nFinanceiro acessa somente servidores cont√°beis.\nRH acessa sistema de ponto, mas n√£o banco de dados financeiro.\nTI acessa tudo, mas com log e monitoramento.\nGuest s√≥ tem acesso √† internet.\n\n\nCen√°rio 2 ‚Üí DMZ (Zona Desmilitarizada)\n\nDMZ VLAN: Servidores web e e-mail (vis√≠veis √† internet).\nLAN VLAN: Rede interna dos colaboradores.\nFirewall:\n\nPermite internet ‚Üí DMZ (http/https, smtp).\nBloqueia internet ‚Üí LAN.\nPermite DMZ ‚Üí LAN apenas portas espec√≠ficas (ex.: servidor web acessando banco).\n\n\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ An√°lise Ofensiva (Ataques)\n\nPivoting limitado: se a segmenta√ß√£o for mal configurada, atacante consegue saltar de uma VLAN a outra.\nFirewall mal configurado: portas abertas demais permitem movimenta√ß√£o lateral.\nVLAN hopping: j√° citado, ainda √© vetor comum se n√£o houver boas pr√°ticas.\nAtaques de interconex√£o: se DMZ ou VLAN de servidores n√£o tiver regras r√≠gidas, atacante acessa banco de dados via servidor web comprometido.\n\n\nüîπ An√°lise Defensiva (Boas Pr√°ticas)\n\nDefinir zonas de seguran√ßa: separar rede corporativa, servidores, IoT, convidados, gest√£o.\nAplicar ACLs e Firewalls entre VLANs: permitir s√≥ o m√≠nimo necess√°rio.\nCriar VLAN de Guest isolada: visitantes s√≥ acessam internet, nunca a rede interna.\nMonitorar tr√°fego entre zonas: uso de IDS/IPS ou SIEM para detectar anomalias.\nDefense in Depth: segmenta√ß√£o √© s√≥ uma das camadas ‚Üí precisa ser combinada com autentica√ß√£o forte, monitoramento e patches.\n\n\nResumo:\n\nSegmenta√ß√£o via VLANs + Firewalls √© uma das armas mais eficazes contra movimenta√ß√£o lateral de atacantes.\nQuem domina isso consegue criar zonas de seguran√ßa robustas, reduzindo impacto de invas√µes e malware.\n\n\nNotas relacionadas:\nVLANs (Virtual Local Area Networks) - O que s√£o\nFirewall - O que √©\n"},"redes/Firewalls,-Switches-e-Roteadores/Switches---O-que-s√£o":{"slug":"redes/Firewalls,-Switches-e-Roteadores/Switches---O-que-s√£o","filePath":"redes/Firewalls, Switches e Roteadores/Switches - O que s√£o.md","title":"Switches - O que s√£o ?","links":[],"tags":["Redes"],"content":"\nConceito Geral\nO que s√£o?\n\nDispositivos de camada 2 (Enlace) do modelo OSI (alguns podem operar tamb√©m na camada 3 ‚Äì faz roteamento b√°sico entre VLANs e sub-redes).\nSua fun√ß√£o principal: receber quadros, identificar o endere√ßo MAC de destino e encaminhar apenas para a porta correta.\nDiferem do hub (que ‚Äúgrita‚Äù o tr√°fego para todo mundo) ‚Üí switch segmenta o tr√°fego.\n\n\nPara que servem?\n\nOrganizar a rede local (LAN).\nReduzir colis√µes, criando dom√≠nios de colis√£o separados para cada porta.\nMelhorar performance e seguran√ßa ‚Üí o tr√°fego s√≥ vai para quem realmente precisa receber.\nPermitem configura√ß√µes avan√ßadas: VLANs, trunking, port security, QoS.\n\n\nComo usar (na pr√°tica)?\n\nConectar hosts (PCs, impressoras, servidores) dentro da LAN.\nCriar VLANs para segmentar grupos de dispositivos.\nConfigurar portas com regras de seguran√ßa (port security, 802.1X).\nEm redes corporativas ‚Üí switches de acesso (usu√°rios), distribui√ß√£o (consolida VLANs) e core (backbone).\n\n\nConceitos importantes\n\nTabela MAC: Switch aprende qual MAC est√° em qual porta.\nFlooding inicial: quando n√£o sabe o destino, envia o quadro para todas as portas (exceto a de origem).\nVLAN (Virtual LAN): divide a rede f√≠sica em redes l√≥gicas.\nTrunking (802.1Q): carrega m√∫ltiplas VLANs em uma porta.\nSTP (Spanning Tree Protocol): evita loops de camada 2.\n\n\nExemplos visuais de um Switch\n\nSwitch 8 portas (compacto)\n\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ  [PWR] [SYS]        8-Port Gigabit SW   ‚îÇ\n‚îÇ ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îå‚îÄ‚îÄ‚îê ‚îÇ\n‚îÇ ‚îÇ1 ‚îÇ ‚îÇ2 ‚îÇ ‚îÇ3 ‚îÇ ‚îÇ4 ‚îÇ ‚îÇ5 ‚îÇ ‚îÇ6 ‚îÇ ‚îÇ7 ‚îÇ ‚îÇ8 ‚îÇ ‚îÇ\n‚îÇ ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îî‚î¨‚îÄ‚îò ‚îÇ\n‚îÇ  ‚îÇ‚óè   ‚îÇ‚óè   ‚îÇ‚óè   ‚îÇ‚óã   ‚îÇ‚óã   ‚îÇ‚óè   ‚îÇ‚óã   ‚îÇ‚óã  ‚îÇ  (‚óè link, ‚óã down)\n‚îî‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îÄ‚î¥‚îÄ‚îÄ‚îÄ‚îò\n\n\nSwitch 24 portas 1U (frontal de rack)\n\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ [PWR] [SYS]                     24-Port 1U Rack Switch                        ‚îÇ\n‚îÇ                                                                               ‚îÇ\n‚îÇ [1][2][3][4][5][6][7][8]  [9][10][11][12][13][14][15][16]  [17][18][19][20]  ‚îÇ\n‚îÇ [‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†]  [‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†][‚ñ†‚ñ†]  [‚ñ†‚ñ†][‚ñ†‚ñ†] ‚îÇ\n‚îÇ [21][22][23][24]      [SFP+ Uplink A] [SFP+ Uplink B]       [Console][MGMT]  ‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\nLegenda: [‚ñ†‚ñ†] = porta RJ-45; SFP+ = uplinks de fibra; Console = serial; MGMT = porta out-of-band\n\n\nVers√£o minimalista (√≠cones de porta)\n\n‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Switch ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n‚îÇ PWR SYS                    ‚îÇ\n‚îÇ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£           ‚îÇ  (‚ñ£ = porta)\n‚îÇ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£           ‚îÇ\n‚îÇ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£ ‚ñ£  [SFP][SFP]‚îÇ\n‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n\n\nTopologia simples com dois hosts\n\n[Host A]‚îÄ‚îÄ‚îÄ‚îê\n           ‚îÇ  ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê\n           ‚îú‚îÄ‚îÄ‚îÇ [1][2][3][4][5][6][7][8]   ‚îÇ\n[Host B]‚îÄ‚îÄ‚îÄ‚îò  ‚îÇ           Switch            ‚îÇ\n              ‚îÇ      [SFP A]  [SFP B]      ‚îÇ\n              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò\n                     ‚îÇ\n                  [Roteador/Firewall]\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ An√°lise Ofensiva (como atacantes exploram switches)\n\nARP Spoofing / ARP Poisoning: falsificar MACs e enganar a tabela do switch ‚Üí possibilita MITM.\nMAC Flooding: encher a tabela de MACs at√© o switch ‚Äúquebrar‚Äù e come√ßar a se comportar como hub ‚Üí tr√°fego vaza.\nVLAN Hopping: explora√ß√£o de m√° configura√ß√£o de trunk/VLAN para saltar de uma rede para outra.\nDHCP Starvation + Rogue DHCP: saturar pool de IPs e for√ßar clientes a pegar IP de servidor falso.\n\n\nüîπ An√°lise Defensiva (boas pr√°ticas em switches)\n\nPort Security ‚Üí limitar quantidade de MACs por porta.\nDHCP Snooping ‚Üí validar servidores DHCP leg√≠timos.\nDynamic ARP Inspection (DAI) ‚Üí proteger contra ARP Spoofing.\nVLANs bem configuradas ‚Üí separar tr√°fego de usu√°rios, servidores, VoIP etc.\nTrunking s√≥ quando necess√°rio ‚Üí restringir VLANs em trunks.\nSTP ativado ‚Üí prote√ß√£o contra loops.\nLogs e monitoramento SNMP/Syslog ‚Üí detectar comportamentos estranhos.\n\n\nResumindo para ciberseguran√ßa\n\nSwitch ‚â† s√≥ ‚Äúcaixinha que conecta PCs‚Äù.\n√â o primeiro ponto de defesa na LAN.\nSe mal configurado ‚Üí vira um playground para ataques MITM, sniffing e pivoting.\nUm analista de seguran√ßa deve entender:\n\nComo funciona a tabela MAC.\nAtaques de camada 2.\nFerramentas ofensivas (ex: Ettercap, Bettercap).\nDefesas (port security, ARP inspection).\n\n\n\n"},"redes/Firewalls,-Switches-e-Roteadores/VLANs-(Virtual-Local-Area-Networks)---O-que-s√£o":{"slug":"redes/Firewalls,-Switches-e-Roteadores/VLANs-(Virtual-Local-Area-Networks)---O-que-s√£o","filePath":"redes/Firewalls, Switches e Roteadores/VLANs (Virtual Local Area Networks) - O que s√£o.md","title":"Virtual Local Area Networks (VLANs) - O que s√£o?","links":["redes/Firewalls,-Switches-e-Roteadores/Segmenta√ß√£o-de-Redes-com-VLANs-e-Firewalls"],"tags":["Redes"],"content":"\nConceito Geral\nO que s√£o\n\nVLAN (Virtual LAN) √© uma forma de segmentar logicamente uma rede dentro de um switch.\nPermite dividir uma rede f√≠sica em v√°rias redes l√≥gicas.\nPermite que dispositivos que n√£o est√£o fisicamente pr√≥ximos sejam agrupados como se estivessem na mesma rede local.\nCada VLAN funciona como uma rede independente ‚Üí mesmo switch pode hospedar v√°rias redes isoladas.\n\n\nComo funcionam\n\nCada porta de um switch pode ser associada a uma VLAN espec√≠fica.\nO switch marca os quadros Ethernet com um tag VLAN (IEEE 802.1Q) indicando a qual VLAN aquele tr√°fego pertence.\nQuando um frame (quadro) sai de uma m√°quina, o switch tagueia esse frame com um identificador chamado VLAN ID.\nEsse tag vai no protocolo 802.1Q (padr√£o VLAN).\nComunica√ß√£o entre diferentes VLANs s√≥ ocorre via roteador ou firewall (Inter-VLAN Routing).\n\n\nO tr√°fego de uma VLAN n√£o se comunica com outra VLAN, a n√£o ser que tenha um roteamento intermedi√°rio, geralmente via roteador ou Switch Layer 3 (Roteamento entre VLANs).\n\n\nPara que servem\n\nIsolamento de tr√°fego (seguran√ßa): impede que todos os dispositivos estejam no mesmo broadcast domain.\nOrganiza√ß√£o l√≥gica: separar setores da empresa (Financeiro, RH, TI, Visitantes).\nPerformance: reduz broadcasts desnecess√°rios em toda a rede.\nGerenciamento: facilita aplicar pol√≠ticas espec√≠ficas a determinados grupos de m√°quinas.\n\n\nExemplos pr√°ticos\nExemplo 1:\n\nEmpresa com tr√™s setores:\n\nVLAN 10 ‚Üí Financeiro\nVLAN 20 ‚Üí Recursos Humanos\nVLAN 30 ‚Üí TI\n\n\nFuncion√°rios de RH n√£o conseguem acessar diretamente servidores do Financeiro sem passar pelo firewall.\nVisitantes conectam-se em uma VLAN de Guest isolada, sem acesso aos ativos internos.\n\nExemplo 2:\nImagina uma oficina:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetorVLANIPDescri√ß√£oRecep√ß√£o10192.168.10.0/24Atendimento ao clienteOficina20192.168.20.0/24Ferramentas, impressorasAdministrativo30192.168.30.0/24Gest√£o, financeiroVisitantes40192.168.40.0/24Wi-Fi separado e isolado\n\nA VLAN 40 (visitantes) n√£o acessa a VLAN do administrativo (30).\nSe quiser que algu√©m da recep√ß√£o acesse uma impressora na oficina (VLAN 20), o roteamento entre VLANs √© configurado.\n\n\nTermos comuns:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTermoDescri√ß√£oAccess PortPorta que conecta um dispositivo a uma VLAN espec√≠fica.Trunk PortPorta que carrega m√∫ltiplas VLANs entre switches.VLAN IDN√∫mero que identifica uma VLAN (0-4095, padr√£o at√© 4094).802.1QProtocolo usado para tagueamento de VLAN.Native VLANVLAN padr√£o usada quando o tr√°fego n√£o tem tag.\n\nResumo:\nVLANs s√£o ferramentas poderosas de segmenta√ß√£o l√≥gica. Para ciberseguran√ßa, voc√™ precisa dominar como configur√°-las corretamente, pois erros simples viram brechas para VLAN hopping e sniffing.\n\nSeguran√ßa: Separa setores (Financeiro, Administrativo, Operacional, Visitantes, IoT, C√¢meras, etc.).\nOrganiza√ß√£o: Melhora o gerenciamento da rede.\nPerformance: Reduz broadcast ‚Äî menos ru√≠do na rede.\nEscalabilidade: Facilita expans√£o, reorganiza√ß√£o e manuten√ß√£o.\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏ An√°lise Ofensiva (Ataques)\n\nVLAN Hopping: explorar m√° configura√ß√£o para acessar outra VLAN indevidamente.\n\nSwitch Spoofing: atacante configura interface como trunk e passa para outra VLAN.\nDouble Tagging: envia pacotes com duas tags VLAN, enganando o switch.\n\n\nSniffing inter-VLAN: se o isolamento n√£o estiver bem configurado, √© poss√≠vel capturar tr√°fego de outras VLANs.\nPivoting: uma vez em uma VLAN, atacante pode tentar saltar para outra para expandir acesso.\n\n\nüîπ An√°lise Defensiva (Boas Pr√°ticas)\n\nDesabilitar portas trunk n√£o utilizadas.\nConfigurar VLAN nativa exclusiva (e n√£o usar VLAN 1).\nPort Security: limitar n√∫mero de dispositivos por porta.\nSeparar VLANs sens√≠veis (ex.: servidores, VoIP, gest√£o de rede).\nFirewalls e ACLs: controlar tr√°fego entre VLANs de forma r√≠gida.\n\n\nNotas relacionadas:\nSegmenta√ß√£o de Redes com VLANs e Firewalls\n"},"redes/OSI-e-TCP-IP/Modelo-OSI---Camadas":{"slug":"redes/OSI-e-TCP-IP/Modelo-OSI---Camadas","filePath":"redes/OSI e TCP IP/Modelo OSI - Camadas.md","title":"Camadas do Modelo OSI","links":["redes/OSI-e-TCP-IP/Modelo-OSI---O-que-√©"],"tags":["Redes","ModeloOSI_TCP/IP"],"content":"\nConceito Geral\nO Modelo OSI (Open Systems Interconnection) √© um modelo conceitual que padroniza a comunica√ß√£o entre sistemas de redes em 7 camadas, onde cada camada executa fun√ß√µes espec√≠ficas e se comunica apenas com as camadas adjacentes.\n\nCamada 7 - Aplica√ß√£o\nA interface do usu√°rio, onde os aplicativos e usu√°rios interagem com a rede. Onde os dados s√£o traduzidos da sintaxe em que foram convertidos em algo que o usu√°rio pode ler.\nA camada de aplica√ß√£o permite que o usu√°rio interaja com a aplica√ß√£o ou rede sempre que o usu√°rio escolher por ler mensagens, transferir arquivos ou executar outras tarefas relacionadas √† rede.\nNavegadores como Chrome usam protocolos da camada de aplica√ß√£o como HTTP/HTTPS. Aplicativos de e-mail como Outlook usam SMTP, POP3 ou IMAP.\n\nCamada 6 - Apresenta√ß√£o\nLida com a tradu√ß√£o, criptografia e compacta√ß√£o de dados para garantir a compatibilidade entre diferentes sistemas.\nA camada e apresenta√ß√£o funciona como um tradutor de dados da rede, ele garante que as camadas de aplica√ß√£o dos sistemas do receptor e do emissor sejam capazes de interpretar as informa√ß√µes enviadas/recebidas.\nEla pode lidar com diferentes codifica√ß√µes de caracteres (ex: UTF-8, ASCII).\n\n\n\nApresenta√ß√£o ‚Üí Aplica√ß√£o(Receptor)\nA camada de apresenta√ß√£o traduz ou formata dados para a camada de aplica√ß√£o com base na sem√¢ntica ou sintaxe que a aplica√ß√£o aceita.\n\n\nApresenta√ß√£o(Emissor) ‚Üí Sess√£o\nA camada de apresenta√ß√£o comprime os dados que v√™m da camada de aplicativo antes de envi√°-los para a Camada 5, a camada de sess√£o.\n\n\n\nCamada 5 - Sess√£o\nEstabelece, gerencia e encerra sess√µes de comunica√ß√£o entre dispositivos.\nA camada de sess√£o estabelece a abertura e fechamento das comunica√ß√µes entre dois dispositivos na rede. Esta camada garante que a sess√£o fique aberta tempo suficiente para que todos os dados necess√°rios sejam enviados. Em seguida, ela fecha a sess√£o para evitar gastar recursos desnecess√°rios.\nEsta camada inclui a autentica√ß√£o e reconex√£o ap√≥s uma interrup√ß√£o.\nProtocolos como NetBIOS RPC e PPTP operam nessa camada.\nAl√©m disto, se uma grande quantidade de dados estiver sendo enviada, a camada sess√£o pode configurar pontos de verifica√ß√£o para caso a transfer√™ncia seja interrompida antes da conclus√£o, os pontos de verifica√ß√£o permitem que a transmiss√£o possa ser retomada sem precisar reiniciar do in√≠cio.\n\nCamada 4 - Transporte\nA camada de transporte gerencia a comunica√ß√£o de ponta a ponta dos dispositivos que interagem entre si, garantindo que os dados cheguem de forma confi√°vel e na ordem correta.\nIsto envolve pegar os dados na camada sess√£o e dividi-los em partes chamadas de segmentos. A camada transporte no dispositivo que recebe a comunica√ß√£o lida com a remontagem desses segmentos em dados que ser√£o consum√≠veis pela camada sess√£o.\n√â aqui que as comunica√ß√µes selecionam os n√∫meros das portas TCP para categorizar e organizar as transmiss√µes de dados na rede.\nNesta camada, s√£o utilizados o Protocolo de Controle de Transmiss√£o (TCP) e o Protocolo de Datagrama de Usu√°rio (UDP).\nTCP garante entrega e ordem. UDP √© mais r√°pido, mas sem garantias ‚Äî ideal para voz/v√≠deo em tempo real.\n\nCamada 3 - Rede\nA camada de rede concentra-se em roteamento e endere√ßamento l√≥gico, sendo o IP um protocolo comum nesta camada.\nEsta camada transforma os segmentos da camada de transporte (Camada 4) em pacotes. A divis√£o dos segmentos em pacotes acontece nos dispositivo do remente e eles s√£o remontados no dispositivo receptor.\nA camada de rede √© respons√°vel por fornecer os meios para transferir pacotes de informa√ß√µes entre os n√≥s conectados, por meio de uma ou mais redes.\nA camada de rede tamb√©m funciona como ferramenta de efici√™ncia, ele descobre o caminho f√≠sico ideal necess√°rio para levar os dados ao seu destino, essa fun√ß√£o √© chamada de ‚Äúroteamento.\nOs dispositivos utilizados nessa camada s√£o os roteadores e alguns switches.\nDo ponto de vista TCP/IP, √© aqui que os endere√ßos IP s√£o aplicados para fins de roteamento.\nAl√©m do IP, a camada 3 tamb√©m usa protocolos como ICMP (usado no comando ping).\n\nCamada 2 - Enlace\nA camada de enlace √© respons√°vel por criar um enlace confi√°vel entre n√≥s conectados diretamente, geralmente envolvendo endere√ßos MAC.\nEla facilita a transfer√™ncia de dados entre dois dispositivos que utilizam a mesma rede, al√©m de gerenciar o controle de fluxo e erros das informa√ß√µes.\nNesta camada os pacotes s√£o divididos em partes chamadas de frames. Dentro dela temos duas subcamadas, ade controle de acesso √† m√≠dia (MAC) e controle de link l√≥gico (LLC).\nEsta camada tamb√©m permite a transmiss√£o de dados para a Camada 3, a camada de rede, onde s√£o endere√ßados e roteados.\n\nCamada 1 - F√≠sica\nA camada f√≠sica √© o ‚Äúhardware‚Äù, lida com cabos, switches e a transmiss√£o de bits.\nEla tamb√©m incluiu uma variedade de componentes como cabos, frequ√™ncia de r√°dio usada para transmitir dados, Wi-Fi e outras estruturas f√≠sicas para transmitir dados, como pinos, tens√µes necess√°rias e tipos de portas.\nEle determina como as conex√µes f√≠sicas com a rede s√£o configuradas e como os bits s√£o representados em sinais previs√≠veis √† medida que s√£o transmitidos eletricamente, opticamente ou por ondas de r√°dio.\n\nNotas relacionadas:\nModelo OSI - O que √©\n"},"redes/OSI-e-TCP-IP/Modelo-OSI---O-que-√©":{"slug":"redes/OSI-e-TCP-IP/Modelo-OSI---O-que-√©","filePath":"redes/OSI e TCP IP/Modelo OSI - O que √©.md","title":"O que √© o Modelo OSI","links":["redes/OSI-e-TCP-IP/Modelo-OSI---Camadas","redes/OSI-e-TCP-IP/OSI-e-TCP-IP---Diferen√ßas"],"tags":["Redes","ModeloOSI_TCP/IP"],"content":"\nConceito Geral\nO Modelo OSI (Open Systems Interconnection) √© um modelo conceitual, ele padroniza a comunica√ß√£o entre sistemas de redes em 7 camadas, onde cada camada executa fun√ß√µes espec√≠ficas e se comunica apenas com as camadas adjacentes, acima e abaixo.\nO modelo OSI descreve como os sistemas de rede se comunicam. O modelo √© uma abstra√ß√£o em camadas que ajuda a entender como e onde ocorrem os processos de comunica√ß√£o, da aplica√ß√£o at√© os bits na rede.\nCada camada executa um trabalho espec√≠fico antes de enviar os dados para a pr√≥xima camada.\n\nCamada 7 ‚Äì Aplica√ß√£o\nCamada 6 ‚Äì Apresenta√ß√£o\nCamada 5 ‚Äì Sess√£o\nCamada 4 ‚Äì Transporte\nCamada 3 ‚Äì Rede\nCamada 2 ‚Äì Enlace de dados\nCamada 1 ‚Äì F√≠sica\n\n\nPra que serve ?\nPra padronizar a comunica√ß√£o entre dispositivos de rede, mesmo que sejam de fabricantes ou tecnologias diferentes.\n\nPor que √© dividido em camadas?\nCada camada isola responsabilidades e facilita o entendimento, desenvolvimento e troubleshooting.\n\nNotas relacionadas:\nModelo OSI - Camadas\nOSI e TCP IP - Diferen√ßas\n"},"redes/OSI-e-TCP-IP/OSI-e-TCP-IP---Diferen√ßas":{"slug":"redes/OSI-e-TCP-IP/OSI-e-TCP-IP---Diferen√ßas","filePath":"redes/OSI e TCP IP/OSI e TCP IP - Diferen√ßas.md","title":"OSI e TCP IP - Diferen√ßa entre modelos","links":["redes/OSI-e-TCP-IP/Modelo-OSI---O-que-√©","redes/OSI-e-TCP-IP/TCP-IP---O-que-√©"],"tags":["Redes","ModeloOSI_TCP/IP"],"content":"\nConceito Geral\nO modelo OSI com suas 7 camadas √© um guia te√≥rico para a compreens√£o da comunica√ß√£o de rede. J√° o TCP/IP, que possui 4 camadas, √© o esqueleto das redes modernas.\nDiferente do modelo OSI, o TCP/IP combina fun√ß√µes; por exemplo, a camada de aplica√ß√£o no modelo OSI corresponde a tr√™s camadas no TCP/IP, uma fus√£o que proporciona a efici√™ncia operacional.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nModelo OSIModelo TCP/IP7 camadas4 ou 5 camadasModelo te√≥ricoModelo pr√°ticoSess√£o e Apresenta√ß√£o independentesInclu√≠das na camada Aplica√ß√£oF√≠sica e Enlace independentesIndependentes (5 camadas) ou inclu√≠das na camada de Acesso (4 camadas)\n\n\n\nResumo r√°pido:\n\nOSI ensina como pensar.\nTCP/IP mostra como acontece.\n\nPrincipais diferen√ßas importantes pra frisar\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTemaModelo OSIModelo TCP/IP (5 camadas)OrigemISO (te√≥rico)DARPA/DoD (pr√°tico)N¬∫ de camadas74 ou 5Camadas AplicativasAplica√ß√£o, Apresenta√ß√£o, Sess√£oTudo inclu√≠do em Aplica√ß√£oFocoClareza conceitualImplementa√ß√£o funcionalTransporteTCP ou UDPTCP ou UDPUso realRefer√™ncia para ensinoBase da internet moderna\nPor que o OSI ainda √© usado se o TCP/IP domina?\nPorque o OSI ajuda a diagnosticar, categorizar e entender ataques, falhas e protocolos. Ele te d√° um mapa mental detalhado. No dia a dia de ciberseguran√ßa ‚Äî especialmente no Red Team ou no SOC ‚Äî voc√™ consegue:\n\n\nMapear ataques por camada (ex: ataque DDoS na camada 3 ou 4, phishing na camada 7).\n\n\nAnalisar logs com contexto (‚Äúessa falha √© de transporte ou de aplica√ß√£o?‚Äù).\n\n\nPensar modularmente: cada camada tem fun√ß√µes, responsabilidades e ferramentas espec√≠ficas.\n\n\nDica de racioc√≠nio para entrevistas e provas\n\n‚ÄúApesar de o TCP/IP ser o modelo implementado, o modelo OSI oferece uma vis√£o mais detalhada e modular, o que facilita a an√°lise t√©cnica, a modelagem de amea√ßas e a segmenta√ß√£o de responsabilidades em ciberseguran√ßa.‚Äù\n\n\nNotas relacionadas:\nModelo OSI - O que √©\nTCP-IP - O que √©\n"},"redes/OSI-e-TCP-IP/TCP-IP---O-que-√©":{"slug":"redes/OSI-e-TCP-IP/TCP-IP---O-que-√©","filePath":"redes/OSI e TCP IP/TCP-IP - O que √©.md","title":"O que √© o TCP/IP","links":["redes/OSI-e-TCP-IP/OSI-e-TCP-IP---Diferen√ßas"],"tags":["Redes","ModeloOSI_TCP/IP"],"content":"\nConceito Geral\nTCP/IP (Transmission Control Protocol/Internet Protocol) √© um conjunto de protocolos de comunica√ß√£o usados para interconectar dispositivos de rede e permitir a troca de informa√ß√µes entre eles na internet. √â a base da comunica√ß√£o na internet e tamb√©m em redes privadas.\nEle combina o Protocolo de Controle de Transmiss√£o (TCP), respons√°vel pela transmiss√£o de dados, com o Protocolo de Internet (IP), que identifica os computadores e servidores.\nAs camadas em TCP/IP combinam fun√ß√µes, diferente do modelo OSI, ficando da seguinte forma:\n. Camada 4 ‚Äì Aplica√ß√£o\n\nAplica√ß√£o (OSI)\nApresenta√ß√£o (OSI)\nSess√£o (OSI)\n. Camada 3 ‚Äì Transporte\n\n\nTransporte (OSI)\n. Camada 2 ‚Äì Internet\nRede (OSI)\n. Camada 4 ‚Äì Acesso √† rede\nEnlace de Dados (OSI)\nF√≠sica (OSI)\n\nO modelo TCP/IP pode ser descrito tanto com 4 camadas quanto com 5 camadas porque existem duas formas de interpretar onde fica a parte de Aplica√ß√£o/Transporte.\n\nCamadas do TCP/IP:\nCamada de Aplica√ß√£o\nSe refere aos programas e protocolos que o TCP/IP deve utilizar para iniciar a transmiss√£o de dados.\nUm navegador de Internet pode utilizar protocolos como o HTTP e HTTPS para realizar comunica√ß√£o a partir das URLs. Um cliente de transfer√™ncia de arquivos como o FileZilla, utiliza FTP. J√° um servi√ßo de e-mail usa o protocolo SMTP.\nA camada de aplica√ß√£o cont√©m os protocolos que definem o tipo de servi√ßo a ser utilizado na comunica√ß√£o, como HTTP, FTP, SMTP, entre outros\n\nCamada de Transporte (TCP)\nSe refere ao Protocolo de controle de transmiss√£o (TCP), √© o que define como os dados ser√£o transmitidos entre as duas partes do processo.\nA camada de transporte estabelece os canais de comunica√ß√£o de transfer√™ncia de dados.\nAqui os dados s√£o divididos em pacotes e numerados, criando uma sequ√™ncia l√≥gica que ser√° verificada nas camadas seguintes. Ela define para onde os dados ser√£o enviados e a que taxa de transfer√™ncia.\n\nPortas TCP\nO TCP usa as chamadas portas, elementos num√©ricos que identificam os pontos de uma transfer√™ncia de dados. As portas s√£o sempre utilizadas em conjunto com um endere√ßo de rede (como o endere√ßo IP).\nPor serem identificadas numericamente num padr√£o de 16 bits, as portas v√£o do 0 at√© o 65535. Alguns n√∫meros de portas s√£o universalmente utilizados para determinados processos. Por exemplo:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPortaProtocoloNomeTipoFun√ß√£oComent√°rios20FTPFTP - DadosTCPTransfer√™ncia de dadosUsada com a porta 21, menos comum em FTPS21FTPFTP - ControleTCPComandos de controle e autentica√ß√£oPode ser alvo em brute force22SSHSecure ShellTCPAcesso remoto seguroPorta padr√£o pra pentest e pivoting25SMTPSimple Mail TransferTCPEnvio de e-mailsUsada por spammers, verifica√ß√£o de open relays53DNSDomain Name SystemTCP/UDPResolu√ß√£o de nomes de dom√≠nioUDP para requisi√ß√µes simples, TCP para zonas80HTTPHyperText TransferTCPNavega√ß√£o web n√£o criptografadaSempre alvo para explora√ß√£o web443HTTPSHTTP Secure (TLS/SSL)TCPNavega√ß√£o web seguraCertificados, sniffing se TLS mal configurado\nEmbora o TCP seja o protocolo mais utilizado na camada de transporte, outros protocolos tamb√©m podem ser utilizados. Podem ser citados como exemplo o SCTP (Stream Control Transmission Protocol) e o UDP (User Datagram Protocol).\n\nCamada de Rede (IP)\nEsta camada lida com as interfaces dos hosts e transforma os pacotes de dados em datagramas.\nCada datagrama possui dois componentes principais:\n\n\nCabe√ßalho (header)\nContendo o endere√ßo de IP da origem e do destino e outros dados relevantes\n\n\nCarga √∫til (payload)\nCont√©m os dados em si que est√£o sendo enviados\n\n\nAl√©m do protocolo IP, a camada de rede tamb√©m utiliza o protocolo ICMP (Protocolo de Mensagens de Controle da Internet), respons√°vel por fornecer relat√≥rios de erros √†s fontes de envio de dados. Desta forma, caso haja algum problema na comunica√ß√£o entre os hosts, a mensagem definir√° qual foi o erro ocorrido e ajustes poder√£o ser realizados para completar o processo de maneira bem-sucedida.\n\nCamada de Interface\nTamb√©m chamada de enlace de dados ou liga√ß√£o de dados, lida com a transfer√™ncia em si dos dados entre os hosts.\nA camada de interface √© respons√°vel, entre outros aspectos, por definir como os dados ser√£o transmitidos, seja por conex√£o cabeada como Ethernet ou sem fios como uma rede Wi-Fi.\n\n\nAplica√ß√£o lida com Dados\nTransporte lida com Segmentos\nInternet lida com Pacotes\nRede lida com Bits\n\n\nNotas relacionadas:\nOSI e TCP IP - Diferen√ßas\n"},"redes/Protocolos-de-Rede/ARP-(Address-Resolution-Protocol)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/ARP-(Address-Resolution-Protocol)---O-que-√©","filePath":"redes/Protocolos de Rede/ARP (Address Resolution Protocol) - O que √©.md","title":"Address Resolution Protocol (ARP) - O que √©?","links":[],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nO ARP √© um protocolo de camada 2,5 (entre Enlace e Rede) que serve para mapear endere√ßos IP (l√≥gicos) em endere√ßos MAC (f√≠sicos) dentro de uma rede local.\nARP basicamente serve para descobrir um endere√ßo MAC desconhecido de um endere√ßo IP conhecido. Ap√≥s utilizar\n\n‚öôÔ∏è Funcionamento\n\nUm host sabe o IP de destino (ex: 192.168.1.10), mas n√£o sabe o MAC.\nEle envia uma ARP Request em broadcast na rede perguntando:\n\n‚ÄúQuem tem o IP 192.168.1.10?‚Äù\n\n\nO host dono do IP responde com uma ARP Reply, informando seu MAC.\nO host solicitante guarda essa rela√ß√£o IP ‚Üî MAC na ARP Cache (mem√≥ria tempor√°ria) para n√£o precisar perguntar sempre.\n\nSem ARP, m√°quinas em uma LAN n√£o conseguiriam se comunicar de forma direta usando apenas IPs.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEtapaAcontecimentoARP RequestBroadcast: ‚ÄúQuem tem IP X.X.X.X?‚ÄùARP ReplyUnicast: ‚ÄúEu, IP X.X.X.X, meu MAC √© Y:Y:Y‚ÄùCacheDispositivo guarda IP ‚ÜîÔ∏è MAC na tabela ARP\nExemplo de ARP Request:\n\nOpera√ß√£o: Request\nRemetente IP: 192.168.0.105\nRemetente MAC: 11:22:33:44:55:66\nDestino IP: 192.168.0.1\nDestino MAC: 00:00:00:00:00:00 (n√£o sabe ainda)\nMensagem: **‚ÄúQuem tem 192.168.0.1? Me responda!‚Äù\n\nExemplo de ARP Reply\n\nOpera√ß√£o: Reply\nRemetente IP: 192.168.0.1\nRemetente MAC: AA:BB:CC:DD:EE:FF\nDestino IP: 192.168.0.105\nDestino MAC: 11:22:33:44:55:66\nMensagem: **‚ÄúEu tenho 192.168.0.1, meu MAC √© AA:BB:CC:DD:EE:FF.‚Äù\n\n\nPr√≥ximo passo ap√≥s a resolu√ß√£o ARP\n\n\nHost A quer falar com Host B\n\nEle sabe o IP do destino (ex: 192.168.1.20).\nEle usou o ARP para descobrir que o MAC correspondente √© aa:bb:cc:dd:ee:ff.\n\n\n\nEncapsulamento no modelo OSI\n\nCamada 3 (Rede): cria um pacote IP com origem/destino (192.168.1.10 ‚Üí 192.168.1.20).\nCamada 2 (Enlace): encapsula esse pacote IP dentro de um quadro Ethernet, usando:\n\nMAC de origem: 11:22:33:44:55:66 (do Host A)\nMAC de destino: aa:bb:cc:dd:ee:ff (descoberto pelo ARP)\n\n\n\n\n\nTransmiss√£o na rede local\n\nO quadro Ethernet √© enviado pelo cabo/Wi-Fi.\nSwitches usam o endere√ßo MAC de destino para encaminhar o quadro at√© o host correto.\n\n\n\nReceptor (Host B)\n\nA camada 2 recebe o quadro, v√™ que o MAC de destino √© o dele, e aceita o pacote.\nEntrega para a camada 3, que v√™ o IP de destino, processa e responde.\n\n\n\nEsse processo se repete sempre que necess√°rio. O ARP s√≥ entra em cena quando n√£o h√° entrada no cache. Depois que j√° temos o MAC, a comunica√ß√£o segue fluindo normalmente via Ethernet + IP.\n\n\nAn√°lise ofensiva/defensiva\nüî∏ Falhas / Ataques (como podem ser explorados)\nO ARP n√£o tem autentica√ß√£o nem verifica√ß√£o de integridade. Isso abre a porta para ataques:\n\n\nARP Spoofing / Poisoning\n\nO atacante envia respostas ARP falsas, associando seu MAC a um IP que n√£o √© dele (por exemplo, o gateway).\nResultado: o tr√°fego passa a ir para o atacante.\nPode levar a MITM (Man-in-the-Middle), sniffing, modifica√ß√£o de pacotes, ou DoS.\n\n\n\nDoS por ARP Flooding\n\nO invasor envia milhares de pacotes ARP falsos para encher a cache das v√≠timas.\nIsso gera instabilidade e pode travar dispositivos de rede.\n\n\n\nRedirecionamento de tr√°fego\n\nO atacante ‚Äúse apresenta‚Äù como o gateway (default gateway).\nAssim, todo tr√°fego para fora da rede passa primeiro por ele ‚Üí perfeito para sniffing credenciais.\n\n\n\nPivoting em pentest\n\nEm redes internas, o pentester usa ARP Spoofing para interceptar pacotes e escalar acesso lateralmente.\n\n\n\nFerramentas comuns: arpspoof, ettercap, Bettercap, Cain &amp; Abel.\n\nüîπ Defesas / Mitiga√ß√£o (como se proteger)\n\n\nARP Inspection / Seguran√ßa em switches\n\nDAI (Dynamic ARP Inspection) nos switches Cisco: valida ARP Replies com base em tabelas confi√°veis (DHCP Snooping).\nBloqueia pacotes falsos.\n\n\n\nUso de ARP est√°tico\n\nConfigurar manualmente IP ‚Üî MAC em m√°quinas cr√≠ticas (ex: gateway, servidores).\nPouco escal√°vel em redes grandes, mas √∫til em ambientes sens√≠veis.\n\n\n\nFerramentas de detec√ß√£o\n\narpwatch, XArp: monitoram mudan√ßas na ARP Table e alertam sobre spoofing.\nSIEM pode correlacionar logs de anomalias ARP.\n\n\n\nSegmenta√ß√£o de rede\n\nVLANs reduzem a superf√≠cie de ataque ‚Üí atacante s√≥ consegue envenenar quem est√° na mesma broadcast domain.\n\n\n\nUso de IPv6 (ND com seguran√ßa)\n\nEm IPv6 o ARP foi substitu√≠do por NDP (Neighbor Discovery Protocol), que tem extens√µes de seguran√ßa (SEND).\nAinda tem problemas, mas menos trivial que o ARP do IPv4.\n\n\n\n\nResumo:\n\nARP = ‚ÄúQual IP tem esse MAC?‚Äù\nVulner√°vel porque acredita em qualquer resposta.\nAtaque cl√°ssico = ARP Spoofing ‚Üí MITM, sniffing, DoS.\nDefesa = DAI, monitoramento, tabelas est√°ticas, segmenta√ß√£o.\n\n"},"redes/Protocolos-de-Rede/DHCP-(Dynamic-Host-Configuration-Protocol)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/DHCP-(Dynamic-Host-Configuration-Protocol)---O-que-√©","filePath":"redes/Protocolos de Rede/DHCP (Dynamic Host Configuration Protocol) - O que √©.md","title":"Dynamic Host Configuration Protocol (DHCP) - O que √©?","links":[],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nO DHCP (Dynamic Host Configuration Protocol) √© um protocolo da camada de aplica√ß√£o (modelo OSI), baseado em UDP (porta 67 para o servidor, 68 para o cliente).\nA fun√ß√£o dele √© atribuir automaticamente configura√ß√µes de rede a dispositivos que entram na rede, evitando que voc√™ tenha que configurar IP, m√°scara, gateway e DNS manualmente.\nEle evita a necessidade de configura√ß√£o manual de IP. Imagina ter que configurar 500 maquinas em um escrit√≥rio, uma a uma. O DHCP faz isso de maneira autom√°tica e inteligente.\n\nüß† DHCP roda sobre UDP, n√£o usa TCP.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nOSICamada 7 ‚Üí Aplica√ß√£oTransporteUDPPortas67 (Servidor) / 68 (Cliente)\n\n‚öôÔ∏èFuncionamento\nDORA ‚Üí Discover, Offer, Request, Acknowledge\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEtapaQuem fazDescri√ß√£oD ‚Üí DiscoverCliente‚ÄúAlgu√©m a√≠ me d√° um IP?‚Äù (Broadcast)O ‚Üí OfferServidor DHCP‚ÄúTenho esse IP dispon√≠vel: 192.168.0.100.‚ÄùR ‚Üí RequestCliente‚ÄúQuero esse IP, por favor reserva pra mim!‚ÄùA ‚Üí AcknowledgeServidor DHCP‚ÄúFeito! IP 192.168.0.100 √© seu.‚Äù\nAl√©m de IP, o DHCP pode entregar:\n\nM√°scara de rede.\nGateway padr√£o.\nDNS.\nTempo de lease (dura√ß√£o do IP atribu√≠do).\nAt√© configs mais avan√ßadas (ex.: PXE boot).\n\n\n\nAn√°lise ofensiva/defensiva\nüî∏Falhas / Ataques (como explorar)\nO problema √© que o DHCP n√£o tem autentica√ß√£o nativa ‚Üí qualquer dispositivo na rede pode se passar por servidor ou cliente. Isso abre portas para v√°rios ataques:\n\n\nDHCP Starvation Attack (Esgotamento de IPs)\n\nO atacante manda milhares de requests falsos com MACs diferentes.\nO servidor ‚Äúempresta‚Äù todos os IPs dispon√≠veis.\nResultado: clientes leg√≠timos ficam sem IP e sem acesso √† rede.\nFerramenta: yersinia ou dhcpstarv.\n\n\n\nRogue DHCP Server (Servidor DHCP Malicioso)\n\nO atacante coloca um servidor DHCP falso na rede.\nQuando o cliente pede IP, pode receber do atacante em vez do servidor leg√≠timo.\nO invasor pode entregar configs maliciosas, como:\n\nGateway falso (redirecionando tr√°fego por ele ‚Üí MITM).\nDNS malicioso (envenenamento de tr√°fego).\nIP inv√°lido (nega√ß√£o de servi√ßo).\n\n\nFerramenta: Ettercap, dhcpd modificado, Kali Linux j√° tem labs disso.\n\n\n\nMITM via DHCP Spoofing\n\nMistura dos dois ataques acima.\nO invasor se torna o man-in-the-middle colocando o tr√°fego para passar por ele antes de ir ao gateway real.\n\n\n\n\nüîπ Defesas / Mitiga√ß√£o (como se proteger)\nAs medidas dependem se voc√™ √© admin da rede ou apenas usu√°rio:\nNo lado do administrador (camada de infraestrutura):\n\n\nDHCP Snooping (switches gerenci√°veis)\n\nConfigura quais portas do switch podem ser servidores DHCP (trusted).\nBloqueia qualquer DHCP Offer/ACK vindo de portas n√£o confi√°veis.\n\n\n\nPort Security\n\nLimita quantos MACs podem se registrar por porta.\nMitiga ataques de starvation.\n\n\n\n802.1X (autentica√ß√£o de rede)\n\nAntes de liberar DHCP, o cliente precisa se autenticar (certificado, usu√°rio/senha).\n\n\n\nIP Source Guard / Dynamic ARP Inspection\n\nTrabalha junto com DHCP Snooping para evitar spoofing.\n\n\n\nNo lado do usu√°rio/endpoint:\n\nConfigurar IP est√°tico em casos cr√≠ticos (n√£o depender de DHCP).\nMonitorar logs de conex√£o ‚Üí se aparecerem IPs estranhos de gateway/DNS, pode ser ind√≠cio de ataque.\nFerramentas de detec√ß√£o (IDS/IPS, como Snort/Suricata) podem gerar alertas para pacotes DHCP an√¥malos.\n\n\nResumo:\n\nDHCP √© super pr√°tico, mas sem autentica√ß√£o nativa ‚Üí vulner√°vel a spoofing/starvation.\nDefesas eficazes est√£o mais na camada de rede (switches gerenci√°veis).\nPara pentester, √© alvo cl√°ssico em redes corporativas mal configuradas.\n\n"},"redes/Protocolos-de-Rede/DNS-(Domain-Name-System)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/DNS-(Domain-Name-System)---O-que-√©","filePath":"redes/Protocolos de Rede/DNS (Domain Name System) - O que √©.md","title":"Domain Name System (DNS) - O que √©?","links":[],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\n\n\nFun√ß√£o: Traduz nomes de dom√≠nio leg√≠veis por humanos (ex: google.com) em endere√ßos IP que os computadores entendem (ex: 142.250.190.14).\n\n\nEstrutura: √â hier√°rquico e distribu√≠do, n√£o existe um servidor √∫nico que sabe tudo. Ele segue essa ordem:\n\nRoot (.) ‚Üí servidores raiz.\nTLD (.com, .org, .br, etc.) ‚Üí top-level domain servers.\nAutoritativo ‚Üí servidor do dono do dom√≠nio (quem define o IP).\nRecursivo/Resolver ‚Üí geralmente do seu provedor (ISP) ou configurado no sistema (Google DNS 8.8.8.8, Cloudflare 1.1.1.1).\n\n\n\nExemplo pr√°tico (resolu√ß√£o):\nVoc√™ digita www.exemplo.com:\n\nSeu PC pergunta ao resolver.\nO resolver, se n√£o tiver no cache, consulta os servidores raiz.\nVai para o TLD (.com).\nVai para o autoritativo do exemplo.com, que responde com o IP real.\nO resolver guarda no cache (TTL) e devolve para voc√™.\n\n\n\n\nTermos importantes:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTermoExplica√ß√£o simplesDNS ResolverO primeiro servidor que teu PC pergunta (geralmente o do roteador ou do Google: 8.8.8.8)Zona DNSOnde est√£o registrados os nomes de um dom√≠nioRegistro ANome ‚Üí IP v4Registro AAAANome ‚Üí IP v6Registro MXRegistro de e-mailCache DNSMem√≥ria tempor√°ria com IPs j√° resolvidos\n\n\nAn√°lise ofensiva/defensiva\nüî∏ Ofensiva (como atacante pode usar o DNS legitimamente):\n\nFazer enumera√ß√£o DNS para mapear a infraestrutura da v√≠tima: subdom√≠nios (mail.empresa.com, vpn.empresa.com, etc.).\nUsar ferramentas como nslookup, dig, dnsenum, amass.\nProcurar registros espec√≠ficos:\n\nMX (email) ‚Üí pode indicar provedor de e-mail.\nTXT ‚Üí usado em SPF/DKIM/DMARC (√†s vezes mal configurados).\nSRV ‚Üí servi√ßos como VoIP ou AD.\n\n\n\nüîπ Defensiva (uso normal do time de seguran√ßa):\n\nAdministrar e proteger o DNS autoritativo da empresa.\nUsar DNS filtering (bloquear dom√≠nios maliciosos conhecidos).\nMonitorar logs DNS no SOC para detectar tr√°fego estranho (exfiltra√ß√£o de dados, conex√µes para C2).\n\n\n‚öîÔ∏è Vulnerabilidades e ataques\nAqui √© onde DNS vira um campo de guerra. Principais ataques:\n\n\nDNS Spoofing / Cache Poisoning\n\nO atacante insere respostas falsas no cache do resolver, redirecionando usu√°rios para sites falsos.\nExemplo: voc√™ digita banco.com ‚Üí em vez do IP real, vai para o IP do atacante.\n\n\n\nDNS Hijacking\n\nAltera√ß√£o das configura√ß√µes de DNS do usu√°rio (ex: via malware ou roteador comprometido).\nFaz com que todo o tr√°fego v√° para um servidor DNS malicioso.\n\n\n\nDNS Amplification (DDoS)\n\nAbusa do protocolo UDP (que n√£o tem handshake) para fazer ataques de reflex√£o/amplifica√ß√£o.\nAtacante envia requisi√ß√µes pequenas com IP forjado (da v√≠tima), servidores DNS mandam respostas enormes para a v√≠tima.\n\n\n\nZone Transfer (AXFR) mal configurada\n\nSe o servidor autoritativo permite transfer√™ncia de zona sem restri√ß√£o, atacante baixa toda a lista de subdom√≠nios.\nFerramenta: dig axfr dominio.com @servidor.\n\n\n\nTunneling DNS\n\nTransformar requisi√ß√µes/respostas DNS em um canal de comunica√ß√£o oculto (para bypassar firewalls).\nExfiltra√ß√£o de dados ou acesso remoto via DNS.\nFerramentas: iodine, dnscat2.\n\n\n\nTyposquatting e Homograph Attacks\n\nRegistrar dom√≠nios parecidos (g00gle.com, micros0ft.net) para phishing.\nTamb√©m existe homograph usando caracteres Unicode (–∞—Ä—Ä”è–µ.com em vez de apple.com).\n\n\n\n\nüõ°Ô∏è Defesa e Mitiga√ß√£o\nüîê Boas pr√°ticas para proteger DNS:\n\n\nDNSSEC (Domain Name System Security Extensions)\n\nAdiciona assinatura digital nas respostas DNS ‚Üí impede spoofing/cache poisoning.\n\n\n\nRestri√ß√µes de Zone Transfer\n\nPermitir AXFR s√≥ entre servidores autorizados.\n\n\n\nMonitoramento de Logs DNS\n\nDetectar acessos a dom√≠nios estranhos (exfiltra√ß√£o, C2).\nIntegra√ß√£o com SIEM (Splunk, ELK, Wazuh).\n\n\n\nConfigura√ß√£o segura de resolvers\n\nUsar unbound ou bind bem configurados.\nBloquear recurs√£o em servidores que n√£o devem servir ao p√∫blico.\n\n\n\nProte√ß√£o contra DDoS\n\nAnycast (Cloudflare, Google DNS).\nLimitar respostas a queries suspeitas.\n\n\n\nTreinamento de usu√°rios\n\nPrevenir phishing de typosquatting/homograph.\n\n\n\n"},"redes/Protocolos-de-Rede/HTTP-e-HTTPS---O-que-s√£o":{"slug":"redes/Protocolos-de-Rede/HTTP-e-HTTPS---O-que-s√£o","filePath":"redes/Protocolos de Rede/HTTP e HTTPS - O que s√£o.md","title":"HTTP e HTTPS - o que √© e suas diferen√ßas","links":[],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nAmbos s√£o protocolos da camada de aplica√ß√£o (OSI camada 7), usados para trocar dados entre cliente (navegador, curl, burp, etc.) e servidor web.\n\nCompara√ß√£o direta\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nProtocoloPortaSeguran√ßaVulnerabilidade principalHTTP80NenhumaDados em texto puro (sniffing, MITM)HTTPS443Criptografia + Integridade + Autentica√ß√£oM√° config. de TLS, certificados falsos, ataques avan√ßados\n\n‚öîÔ∏è Em termos de pentest ofensivo, voc√™ (como Red Team) exploraria:\n\nEm HTTP ‚Üí sniffar credenciais, injetar conte√∫do, capturar cookies.\nEm HTTPS ‚Üí checaria configura√ß√µes fracas, testaria downgrade, exploraria servidores desatualizados (OpenSSL vulner√°vel, por exemplo).\n\nüõ°Ô∏è Em defesa (Blue Team/SOC), voc√™ buscaria:\n\nFor√ßar HTTPS sempre.\nDetectar tr√°fego n√£o criptografado.\nMonitorar certificados e alertar sobre uso de protocolos/cifras fracas.\n\n\nHTTP (HyperText Transfer Protocol)\n‚öôÔ∏è Funcionamento\n\nProtocolo de comunica√ß√£o da camada de aplica√ß√£o (OSI ‚Üí Camada 7).\nBaseado em requisi√ß√£o-resposta entre cliente (navegador) e servidor.\nExemplo:\n\nCliente ‚Üí GET /index.html\nServidor ‚Üí retorna HTML do site.\n\n\nTexto puro: os dados trafegam sem criptografia (login, senha, cookies, etc. viajam ‚Äúabertos‚Äù pela rede).\nUsa normalmente a porta 80.\n\nüî∏ Vulnerabilidades / Ataques\n\nSniffing ‚Üí tr√°fego pode ser capturado com Wireshark, tcpdump, etc.\nMITM (Man-in-the-Middle) ‚Üí atacante intercepta/edita requisi√ß√µes e respostas.\nSession Hijacking ‚Üí roubo de cookies de sess√£o.\nPhishing ‚Üí sites falsos usando HTTP podem enganar usu√°rios.\nData Tampering ‚Üí como n√£o h√° integridade, o conte√∫do pode ser alterado em tr√¢nsito.\n\nüîπ Defesa / Mitiga√ß√£o\n\nEvitar uso de HTTP em sites que envolvam dados sens√≠veis.\nFor√ßar redirecionamento para HTTPS.\nImplementar seguran√ßa em transporte (VPN, TLS, HSTS).\n\n\nHTTPS (HyperText Transfer Protocol Secure)\n‚öôÔ∏è Funcionamento\n\n√â o HTTP + TLS (Transport Layer Security).\nTraz 3 pilares principais:\n\nConfidencialidade ‚Üí criptografia dos dados (AES, etc.).\nIntegridade ‚Üí impede altera√ß√£o do tr√°fego em tr√¢nsito.\nAutentica√ß√£o ‚Üí via certificado digital SSL/TLS emitido por uma Autoridade Certificadora (CA).\n\n\nNormalmente na porta 443.\nExemplo: quando voc√™ acessa seu banco ou Gmail, est√° sob HTTPS.\n\nüî∏ Vulnerabilidades / Ataques\n\nConfigura√ß√£o fraca de TLS\n\nUso de vers√µes antigas (SSLv2, SSLv3, TLS 1.0/1.1).\nCifras fracas (RC4, DES).\nAtaques como POODLE, BEAST, Heartbleed, CRIME.\n\n\nCertificados inv√°lidos/falsos\n\nMITM com certificado autoassinado enganando usu√°rios.\nCA comprometida emitindo certificados falsos.\n\n\nDowngrade Attack\n\nFor√ßar a conex√£o a cair de HTTPS ‚Üí HTTP.\n\n\nMixed Content\n\nSite HTTPS que carrega scripts ou imagens via HTTP.\n\n\nPhishing ainda existe\n\nHTTPS n√£o significa ‚Äúsite confi√°vel‚Äù, apenas que a conex√£o √© criptografada.\n\n\n\nüîπ Defesa / Mitiga√ß√£o\n\nUsar TLS 1.3 sempre que poss√≠vel.\nHabilitar apenas cifras fortes (AES-GCM, ChaCha20).\nImplementar HSTS (HTTP Strict Transport Security) para impedir downgrade/HTTP.\nMonitorar validade e integridade dos certificados.\nSeguran√ßa de aplica√ß√£o (mesmo sob HTTPS, ainda existe risco de SQLi, XSS, CSRF, etc.).\n\n\nResumo:\nHTTP √© como mandar uma carta sem envelope.\nHTTPS √© mandar dentro de um envelope lacrado, mas se o lacre for fr√°gil ou falso, ainda d√° ruim.\n"},"redes/Protocolos-de-Rede/ICMP-(Internet-Control-Message-Protocol)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/ICMP-(Internet-Control-Message-Protocol)---O-que-√©","filePath":"redes/Protocolos de Rede/ICMP (Internet Control Message Protocol) - O que √©.md","title":"Internet Control Message Protocol (ICMP) - O que √© ?","links":["ferramentas/Ping---O-que-√©"],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito geral\nICMP (Internet Control Message Protocol) √© um protocolo da camada Rede (Modelo OSI) ou da camada Internet (Modelo TCP/IP).\nUsado para comunicar problemas com a transmiss√£o de dados e diagn√≥sticas problemas na rede.\nEle n√£o serve para transferir dados de usu√°rio como o TCP/UDP, mas sim para enviar mensagens de controle, diagn√≥stico e erro entre dispositivos.\n\nTipos de mensagens ICMP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTipoNomeFun√ß√£o0Echo ReplyResposta ao ping3Destination UnreachableMostra que o destino n√£o √© acess√≠vel8Echo RequestRequisi√ß√£o de ping11Time ExceededTTL expirou (usado em traceroute)\n\nEcho Request / Echo Reply (tipo 8 e 0) ‚Üí usados pelo ping.\nDestination Unreachable (tipo 3) ‚Üí informa que o host/rede/porta n√£o pode ser alcan√ßado.\nTime Exceeded (tipo 11) ‚Üí usado pelo traceroute, indica que o TTL do pacote expirou.\nRedirect (tipo 5) ‚Üí informa um melhor caminho para o roteamento.\n\n\nFerramentas que usam ICMP\n\n\nping ‚Üí mede tempo de resposta e verifica se um host est√° ativo.\n\n\ntraceroute ‚Üí descobre o caminho (roteadores) entre voc√™ e o destino.\n\n\npathping / mtr ‚Üí misto de ping + traceroute.\n\n\n\nExemplo Pr√°tico:\nPing:\n\nNo CMD: ping 8.8.8.8\nVoc√™ vai ver algo assim: 64 bytes from 8.8.8.8: icmp_seq=1 ttl=118 time=20.5 ms\n\nTradu√ß√£o:\n\n64 bytes chegaram de volta\nIsso foi a resposta (Echo Reply)\ntime = lat√™ncia\nttl = tempo de vida restante do pacote\n\n\nICMP na Seguran√ßa\nO ICMP √© √∫til, mas tamb√©m pode ser explorado:\n\nPing flood / ICMP flood ‚Üí ataque DoS enviando pings em massa.\nPing of Death ‚Üí pacotes ICMP malformados que travavam sistemas antigos.\nICMP tunneling ‚Üí usado para exfiltra√ß√£o de dados escondendo informa√ß√µes dentro de mensagens ICMP (bypassa firewalls mal configurados).\n\nPor isso, em ambientes corporativos:\n\nICMP geralmente √© controlado ou filtrado (permitindo apenas tipos espec√≠ficos).\n\n\nResumindo\n\n\nICMP n√£o carrega dados de aplica√ß√£o, mas mensagens de controle.\n\n\nTrabalha junto com o IP, sem portas.\n\n\nServe para diagn√≥stico e erros de rede.\n\n\nMuito usado em ping e traceroute.\n\n\nPrecisa ser monitorado, pois pode ser explorado em ataques.\n\n\n\n\nAn√°lise ofensiva/defensiva\n1. Uso leg√≠timo\n\nFun√ß√£o: Protocolo de mensagens de controle e diagn√≥stico, encapsulado no IP (protocolo n¬∫ 1).\nPrincipais usos:\n\nPing (Echo Request/Reply) ‚Üí verificar conectividade e lat√™ncia.\nTraceroute (Time Exceeded) ‚Üí mapear o caminho dos pacotes at√© o destino.\nMensagens de erro (Destination Unreachable, Redirect).\n\n\n\n\n2. An√°lise ofensiva (como atacantes exploram o ICMP)\n\nPing Sweep ‚Üí varredura para descobrir quais hosts est√£o ativos em uma rede.\nICMP Flood ‚Üí ataque DoS enviando grande volume de pacotes.\nSmurf Attack ‚Üí uso de broadcast + spoofing de IP para amplifica√ß√£o de tr√°fego.\nICMP Tunneling ‚Üí esconder tr√°fego (exfiltra√ß√£o de dados) dentro de pacotes ICMP, burlando firewalls.\nFingerprinting via TTL ‚Üí ICMP pode revelar o SO do alvo (diferen√ßa no TTL padr√£o, tamanho de resposta, etc.).\n\n\n3. An√°lise defensiva (mitiga√ß√£o e monitoramento)\n\n\nHardening:\n\nDesabilitar resposta a ICMP Echo em hosts cr√≠ticos (ou limitar a apenas hosts internos).\nBloquear ICMP Redirect (pode ser abusado para MITM).\n\n\n\nMitiga√ß√£o:\n\nConfigurar firewalls para permitir apenas tipos de ICMP necess√°rios (ex.: Destination Unreachable, Fragmentation Needed).\nRate limiting ‚Üí limitar requisi√ß√µes ICMP por segundo.\n\n\n\nMonitoramento:\n\nSIEM/NIDS ‚Üí gerar alertas em caso de varredura ICMP (muitos Echo Requests).\nDetectar padr√µes suspeitos de tunelamento (ICMP com payloads incomuns ou muito grandes).\n\n\n\n\n4. Lab pr√°tico (pra voc√™ treinar üöÄ)\n\n\nCaptura b√°sica\n\nUse ping entre duas VMs (Windows ‚Üî Linux).\nCapture no Wireshark e analise os pacotes Echo Request/Reply.\n\n\n\nBloqueio de ICMP\n\nNo Linux, use ufw deny icmp (ou regra iptables).\nTeste o ping novamente e veja o comportamento.\n\n\n\nVarredura ICMP\n\nUse nmap -sn 192.168.0.0/24 ‚Üí descobre hosts ativos s√≥ com ICMP.\n\n\n\nFlood controlado\n\nUse hping3 --icmp -i u100 192.168.0.10 para simular flood.\nObserve consumo de CPU no destino.\n\n\n\n\n5. Insight de carreira\n\nEm SOC/Blue Team: voc√™ deve saber diferenciar ‚Äúhost realmente offline‚Äù de ‚Äúhost que n√£o responde a ICMP‚Äù.\nEm Pentest/Red Team: ICMP √© um dos primeiros passos no reconhecimento (descobrir hosts vivos).\nEm entrevista t√©cnica: pode cair algo como:\n\n‚ÄúO ping n√£o respondeu. Isso significa que o servidor est√° desligado?‚Äù\nResposta correta: n√£o necessariamente, pode estar ativo mas protegido por firewall/ACL bloqueando ICMP.\n\n\n\n\nNotas relacionadas:\nPing - O que √©\n"},"redes/Protocolos-de-Rede/IP-(v4-e-v6)---Funcionamento":{"slug":"redes/Protocolos-de-Rede/IP-(v4-e-v6)---Funcionamento","filePath":"redes/Protocolos de Rede/IP (v4 e v6) - Funcionamento.md","title":"IPv4 e IPv6 - Funcionamento","links":["redes/Endere√ßamento-e-Sub-redes/Endere√ßamento---IPv4-e-IPv6"],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nFuncionamento do IP (Internet Protocol)\nO IP (Internet Protocol) √© o protocolo de endere√ßamento e roteamento de pacotes de dados em redes. Ele atua na camada 3 (Rede) do modelo OSI, e define como pacotes s√£o enviados de uma origem at√© um destino.\nNa pr√°tica ele funciona da seguinte forma:\n\nDivis√£o em pacotes: Quando voc√™ envia dados (ex: acessa um site), tudo √© quebrado em pacotes IP.\nEndere√ßamento: Cada pacote tem um endere√ßo de origem e destino\nRoteamento: Os pacotes passam por roteadores que os direcionam para o destino.\nEntrega de best-effort: O IP n√£o garante entrega, ordem ou integridade dos pacotes; isso √© papel do TCP, se usado.\n\nIPv4 vs IPv6 ‚Äî Comparativo T√©cnico\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaracter√≠sticaIPv4IPv6Lan√ßamento19811998Tamanho do Endere√ßo32 bits (ex: 192.168.0.1)128 bits (ex: 2001:0db8:85a3::8a2e:0370:7334)N¬∫ total de endere√ßos~4,3 bilh√µes2^128 (mais que gr√£os de areia na Terra üòÖ)Nota√ß√£oDecimal, separado por pontosHexadecimal, separado por dois-pontosConfigura√ß√£o autom√°ticaDHCPSLAAC (auto) + DHCPv6Seguran√ßa integradaN√£o (IPSec opcional)Sim (IPSec nativo)Fragmenta√ß√£oFeita pelo roteadorFeita apenas pelo hostBroadcastSuportadoN√£o existe (usa multicast)Suporte a mobilidadeLimitadoMelhor suporte nativo\nComo saber se um IP √© IPv4 ou IPv6?\nIPv4 ‚Äî Caracter√≠sticas Visuais\n\nFormato: d.d.d.d (quatro blocos de n√∫meros)\nExemplo: 192.168.1.1\nCada bloco vai de 0 a 255\nUsa pontos para separar os octetos\n\nIPv6 ‚Äî Caracter√≠sticas Visuais\n\nFormato: hexadecimal, separado por dois-pontos\nExemplo: 2001:0db8:85a3:0000:0000:8a2e:0370:7334\nPode conter :: para representar zeros seguidos\nUsa letras de A a F (al√©m dos n√∫meros)\n\nEnt√£o, na real‚Ä¶ o que muda?\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaso realDiferen√ßa pr√°ticaVoc√™ vai escanear uma redeCom IPv4, beleza. Com IPv6? Voc√™ nem sabe por onde come√ßar se n√£o tiver uma dica do range.Quer proteger uma redeTem que lembrar que o IPv6 pode estar ativado, e o firewall pode deixar passar coisas que n√£o deveriam.Quer invadir uma redeSe o alvo tem IPv6 ativado, pode rolar ataque ND spoofing, ou abusar de pacotes ICMPv6 pra mapear a rede.Quer configurar um servidorPode configurar IP p√∫blico real direto no host (sem precisar de NAT), o que facilita acesso remoto e aumenta o risco se n√£o proteger bem.\nAnalogia r√°pida:\n\nIPv4 √© tipo uma cidade superlotada onde as casas compartilham o mesmo endere√ßo (NAT).\nIPv6 √© tipo cada casa do planeta ter seu pr√≥prio endere√ßo global, direto na rua ‚Äî mais simples, mais direto, mais arriscado se n√£o tiver port√£o.\n\nCuriosidades Importantes\n\nIPv4 ainda √© mais usado, mas os endere√ßos est√£o praticamente esgotados.\nIPv6 √© mais seguro, mais r√°pido em redes modernas, e n√£o precisa de NAT (Network Address Translation).\nEm pentest, entender como o IPv6 lida com descoberta de hosts (ex: ICMPv6, NDP) √© essencial ‚Äî √© uma porta de entrada que muitos admins ignoram.\n\n\nNotas relacionadas:\nEndere√ßamento - IPv4 e IPv6\n"},"redes/Protocolos-de-Rede/TCP-(Transmission-Control-Protocol)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/TCP-(Transmission-Control-Protocol)---O-que-√©","filePath":"redes/Protocolos de Rede/TCP (Transmission Control Protocol) - O que √©.md","title":"Transmission Control Protocol (TCP) - O que √©?","links":["redes/Protocolos-de-Rede/TCP-e-UDP---Diferen√ßas"],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nTCP (Transmission Control Protocol) √â um protocolo de transporte da Camada 4 (OSI / TCP-IP). Diferente do UDP, o TCP √© orientado √† conex√£o: antes de transmitir dados, ele garante que o outro lado est√° pronto para receber.\n\nCaracter√≠sticas principais\n\nConfi√°vel ‚Üí garante que os dados cheguem no destino.\nOrdenado ‚Üí os pacotes chegam na mesma sequ√™ncia em que foram enviados.\nLivre de duplica√ß√£o ‚Üí n√£o entrega duas vezes o mesmo dado.\nControle de fluxo ‚Üí evita sobrecarregar o receptor.\nControle de congestionamento ‚Üí evita saturar a rede.\n\n\nComo funciona a comunica√ß√£o\nAntes de enviar dados, o TCP faz o famoso ‚Äúthree-way handshake‚Äù (aperto de m√£o em 3 passos):\n\nCliente envia SYN (pedindo conex√£o).\nServidor responde com SYN + ACK (aceitando).\nCliente confirma com ACK.\n\nS√≥ depois disso a troca de dados come√ßa.\nQuando a comunica√ß√£o termina, h√° um processo de encerramento de conex√£o (com pacotes FIN/ACK).\n\nEstrutura de um segmento TCP\nO cabe√ßalho √© mais robusto que o do UDP:\n\nPorta de origem e destino\nN√∫mero de sequ√™ncia (ordem dos dados)\nN√∫mero de confirma√ß√£o (ACK)\nFlags (SYN, ACK, FIN, RST, PSH, URG etc.)\nJanela (controle de fluxo)\nChecksum\n\n\nExemplos de uso do TCP\nProtocolos que precisam de confiabilidade:\n\nHTTP/HTTPS (web)\nFTP (transfer√™ncia de arquivos)\nSMTP/IMAP/POP3 (e-mails)\nSSH (acesso remoto seguro)\n\n\nResumindo: Ele oferece confiabilidade, ordena√ß√£o e controle da comunica√ß√£o (ideal quando n√£o d√° pra perder dados).\n\nNotas relacionadas:\nTCP e UDP - Diferen√ßas\n"},"redes/Protocolos-de-Rede/TCP-e-UDP---Diferen√ßas":{"slug":"redes/Protocolos-de-Rede/TCP-e-UDP---Diferen√ßas","filePath":"redes/Protocolos de Rede/TCP e UDP - Diferen√ßas.md","title":"TCP e UDP - Diferen√ßas entre protocolos de transporte.","links":["redes/OSI-e-TCP-IP/TCP-IP---O-que-√©","redes/Protocolos-de-Rede/UDP-(User-Datagram-Protocol)---O-que-√©"],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nA principal diferen√ßa entre TCP (protocolo de controle de transmiss√£o) e UDP (protocolo de datagramas do usu√°rio) √© TCP √© um protocolo baseado em conex√£o e UDP √© sem conex√£o. O TCP transfere os dados lentamente e √© mais confi√°vel, enquanto o UDP funciona mais rapidamente mas √© menos confi√°vel. Isso torna cada protocolo adequado para diferentes tipos de transfer√™ncias de dados.\nDois m√©todos diferentes para o mesmo trabalho.\n\nAnalogia r√°pida\n\n\nTCP ‚Üí √â como uma liga√ß√£o telef√¥nica: antes de falar, voc√™ confirma que a outra pessoa est√° na linha e escutando.\n\n\nUDP ‚Üí √â como mandar um grito no est√°dio: voc√™ n√£o sabe quem ouviu, s√≥ manda e pronto.\n\n\n\nDiferen√ßas principais TCP vs UDP\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCaracter√≠sticaTCP üõ°Ô∏è (Transmission Control Protocol)UDP ‚ö° (User Datagram Protocol)Conex√£oOrientado √† conex√£o (3-way handshake)Sem conex√£o (fire-and-forget)ConfiabilidadeGarante entrega, ordem e sem duplica√ß√£oN√£o garante entrega nem ordemControle de fluxoTem (usa janela para regular o envio)N√£o temControle de congestionamentoSim, adapta envio √† redeN√£o, envia sem se importarVelocidadeMais lento (overhead maior)Mais r√°pido (menos cabe√ßalho)Tamanho do cabe√ßalho20 a 60 bytes8 bytesUso t√≠picoQuando n√£o pode perder dados (HTTP, e-mail, SSH, FTP)Quando n√£o pode atrasar dados (DNS, streaming, VoIP, jogos)M√©todo de envioSegmentos (com sequ√™ncia e ACKs)Datagramas independentesOrienta√ß√£oOrientado a fluxo de dados cont√≠nuoOrientado a mensagens\n\nEm resumo:\n\nTCP = confiabilidade acima de velocidade\nUDP = velocidade acima de confiabilidade\n\n\nNotas relacionadas:\nTCP-IP - O que √©\nUDP (User Datagram Protocol) - O que √©\n"},"redes/Protocolos-de-Rede/UDP-(User-Datagram-Protocol)---O-que-√©":{"slug":"redes/Protocolos-de-Rede/UDP-(User-Datagram-Protocol)---O-que-√©","filePath":"redes/Protocolos de Rede/UDP (User Datagram Protocol) - O que √©.md","title":"User Datagram Protocol (UDP) - O que √©?","links":["redes/Protocolos-de-Rede/TCP-e-UDP---Diferen√ßas"],"tags":["Redes","Protocolos_Rede"],"content":"\nConceito Geral\nO UDP √© um protocolo de transporte da camada 4 do modelo OSI (e da camada de transporte no TCP/IP). Ele √© chamado de ‚Äúsem conex√£o‚Äù porque n√£o estabelece uma conex√£o antes de enviar os dados. Ele simplesmente pega os dados, coloca dentro de um datagrama e joga na rede.\nDiferente do TCP, o UDP n√£o garante:\n\nQue os dados cheguem ao destino\nQue cheguem na ordem correta\nQue n√£o haja duplica√ß√£o\n\nOu seja, n√£o tem controle de fluxo nem retransmiss√£o autom√°tica.\n\nEstrutura b√°sica de um datagrama UDP\nUm pacote UDP √© bem simples (8 bytes de cabe√ßalho):\n\nPorta de origem (16 bits) ‚Üí quem enviou\nPorta de destino (16 bits) ‚Üí para quem vai\nComprimento (16 bits) ‚Üí tamanho total do pacote\nChecksum (16 bits) ‚Üí verifica√ß√£o b√°sica de erro\n\nDepois vem os dados da aplica√ß√£o.\n\nVantagens\n\nR√°pido e leve (sem a burocracia do TCP)\nBaixa lat√™ncia ‚Üí ideal para apps em tempo real\nFunciona bem em broadcast e multicast (enviar para v√°rios de uma vez)\n\n\nExemplos de uso do UDP\n\nDNS (resolver nomes ‚Üí IP)\nVoIP (liga√ß√µes por internet)\nStreaming de v√≠deo e √°udio (YouTube, Twitch, Spotify ao vivo)\nJogos online (FPS, MOBA etc.)\nProtocolos como DHCP, SNMP, TFTP\n\n\nResumindo: UDP √© velocidade acima de confiabilidade. Voc√™ usa quando √© mais importante ser r√°pido do que ser perfeito.\n\nNotas relacionadas:\nTCP e UDP - Diferen√ßas\n"}}